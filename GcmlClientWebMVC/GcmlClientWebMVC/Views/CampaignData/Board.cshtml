@model GenericCampaignMasterModel.CampaignInfo

@{
    ViewBag.Title = "Board";
    Layout = "~/Views/Shared/_GcmlLayout.cshtml";
}

<h2>@Model.campaignName</h2>
<i>@Model.campaignId</i>

<fieldset>
    <legend>CampaignInfo</legend>
</fieldset>

<h3>Playerlist</h3>
<ul data-bind="foreach: playerlist">
    <li>
        <span data-bind="text: playerName"></span>
    </li>
</ul>
@*<form>
    Spieler hinzufügen:&nbsp;<input data-bind="value: newPlayerName"/>
    <button data-bind="click: addPlayer">Hinzufügen</button>

</form>*@

<table>
    <thead>
        <tr>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody data-bind="foreach: sektorfield">
        <tr data-bind="foreach: $data">
            <td data-bind="attr: { id: $data.sektorId }, click: $root.sektorClicked, event: { mouseover: $root.sektorHoverEnable, mouseout: $root.sektorHoverDisable } " class="sektor">
                <b data-bind="text: $data.sektorId"></b>
            </td>
        </tr>
    </tbody>
</table>

<p>
    @Html.ActionLink("Edit", "Edit", new { /* id=Model.PrimaryKey */ }) |
    @Html.ActionLink("Back to List", "Index")
</p>

@section scripts
{
    <script src="~/Scripts/knockout-2.3.0.js"></script>
    <script>
        function Player(data) {
            this.playerId = ko.observable(data.playerId);
            this.playerName = ko.observable(data.playerName);
        }

        function FieldViewModel() {
            var self = this;

            self.campaignId = ko.observable();
            self.campaignName = ko.observable();
            self.x = ko.observable(10);
            self.y = ko.observable(22);
            self.sektorfield = ko.observableArray();

            self.playerlist = ko.observableArray([]);
            self.updatePlayerList = function () {
                self.playerlist.removeAll();
                $.getJSON(playerUrl(), "", function (data) {
                    $.each(data, function (idx, data) {
                        self.playerlist.push(new Player({ playerName: data.playerName }));
                    });
                });
            };

            // Spieler hinzufügen
            self.newPlayerName = ko.observable();
            self.addPlayer = function () {
                if (self.newPlayerName !== "") {
                    var p = new Player({ playerName: self.newPlayerName() });

                    $.ajax(playerUrl(), {
                        data: ko.toJSON(p),
                        type: "post", contentType: "application/json",
                        success: function (result) {
                            self.updatePlayerList();
                        }
                    });

                    self.newPlayerName = "";
                }
            };
                      
            // Spielfeld laden
            $.getJSON(gameUrl('@Model.campaignId'), function (data) {

                //$.each(data.Campaign.players, function (idx, val) {
                //    self.playerlist.push(new Player(val));
                //});

                $.each(data.SektorField, function (idx, val) {
                    self.sektorfield.push(val);
                });

                //self.sektorfield = data.SektorField;
                //alert(data.Campaign.campaignName);
                //$.map(data.ListSektors, function(val, key) {
                //$.each(data, function (key, val) {
                //    $("#field").append("<p>" + key + " : " + val + "</p>");
                //});

                //$("#field").html();
                //$("#field").append(data.ListSektors.join());
            });

            // UI
            self.hoveredSektor = ko.observable();
            self.selectedSektor = ko.observable();


            // Click-Event für Sektor
            self.sektorClicked = function (data, event) {
                $(".sektor").removeClass("sektorSelected");
                $("#" + data.sektorId).addClass("sektorSelected");
            };

            self.sektorHoverEnable = function (data, event) {
                $("#" + data.sektorId).addClass("sektorHovered");
            };

            self.sektorHoverDisable = function (data, event) {
                $("#" + data.sektorId).removeClass("sektorHovered");
            };
        }

        ko.applyBindings(new FieldViewModel());
        function gameUrl(id) { return "/api/game/" + (id || ""); }
        function playerUrl(id) { return "/api/player/" + (id || ""); }

        //// Click-Event für Sektor
        //function sektorClicked(data, event) {
        //    $(".sektor").removeClass("sektorSelected");
        //    $("#" + data.sektorId).addClass("sektorSelected");
        //}

        //function sektorHoverEnable(data, event) {
        //    $("#" + data.sektorId).addClass("sektorHovered");
        //}

        //function sektorHoverDisable(data, event) {
        //    $("#" + data.sektorId).removeClass("sektorHovered");
        //}



    </script>



}