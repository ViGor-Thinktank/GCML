<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Web.Http.OData</name>
  </assembly>
  <members>
    <member name="T:System.Net.Http.ODataHttpRequestMessageExtensions">
      <summary> Stellt Erweiterungsmethoden für die <see cref="T:System.Net.Http.HttpRequestMessage" />-Klasse bereit. </summary>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.CreateODataErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,Microsoft.Data.OData.ODataError)">
      <summary> Eine Hilfsmethode, die Inhaltsaushandlungen ausführt und eine <see cref="T:System.Net.Http.HttpResponseMessage" /> erstellt, die einen Fehler mit einer Instanz von &lt;siehe cref="T:System.Net.Http.ObjectContent`1" /&gt; darstellt, der als Wrapper für oDataError als Inhalt dient. Wenn kein Formatierer gefunden wird, gibt diese Methode eine Antwort mit dem Status "406 Nicht akzeptabel" zurück. </summary>
      <returns>Eine Fehlerantwort als Wrapper für oDataError mit dem Statuscode statusCode.</returns>
      <param name="request">Die Anforderung.</param>
      <param name="statusCode">Der Statuscode der erstellten Antwort.</param>
      <param name="oDataError">Der OData-Fehler, für den der Wrapper verwendet werden soll.</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetEdmModel(System.Net.Http.HttpRequestMessage)">
      <summary> Ruft das EDM-Modell ab, das der Anforderung zugeordnet ist. </summary>
      <returns>Das EDM-Modell, das dieser Anforderung zugeordnet ist, oder null, wenn kein solches Modell vorhanden ist.</returns>
      <param name="request">Die Anforderung.</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetInlineCount(System.Net.Http.HttpRequestMessage)">
      <summary> Ruft die Inlineanzahl ab, die in der OData-Antwort verwendet werden soll. </summary>
      <returns>Die zurückzusendende Inlineanzahl oder null, wenn keine solche festgelegt wurde.</returns>
      <param name="request">Die Anforderung.</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetNextPageLink(System.Net.Http.HttpRequestMessage)">
      <summary> Ruft den nächsten Seitenlink ab, der in der OData-Antwort verwendet werden soll. </summary>
      <returns>Der nächste zurückzusendende Seitenlink oder null, wenn kein solcher festgelegt wurde.</returns>
      <param name="request">Die Anforderung.</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetODataPath(System.Net.Http.HttpRequestMessage)">
      <summary> Ruft den OData-Pfad der Anforderung ab. </summary>
      <returns>Der OData-Pfad der Anforderung.</returns>
      <param name="request">Die Anforderung.</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetODataPathHandler(System.Net.Http.HttpRequestMessage)">
      <summary> Ruft den <see cref="T:System.Web.Http.OData.Routing.IODataPathHandler" /> ab, der zum Generieren von Links verwendet werden soll. </summary>
      <returns>Der <see cref="T:System.Web.Http.OData.Routing.IODataPathHandler" />, der zum Generieren von Links verwendet werden soll.</returns>
      <param name="request">Die Anforderung.</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetODataRouteName(System.Net.Http.HttpRequestMessage)">
      <summary> Ruft den Routennamen ab, der zum Generieren von OData-Links verwendet werden soll. </summary>
      <returns>Der Routenname, der zum Generieren von OData-Links verwendet werden soll, die dieser Anforderung zugeordnet sind, oder null, wenn kein solcher Routenname vorhanden ist.</returns>
      <param name="request">Die Anforderung.</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetODataRoutingConventions(System.Net.Http.HttpRequestMessage)">
      <summary> Ruft die OData-Routingkonventionen ab, die für die Controller- und Aktionsauswahl verwendet werden sollen. </summary>
      <returns>Die OData-Routingkonventionen, die für die Controller- und Aktionsauswahl verwendet werden sollen, die dieser Anforderung zugeordnet sind, oder null, wenn keine solchen Routingkonventionen vorhanden sind.</returns>
      <param name="request">Die Anforderung.</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetEdmModel(System.Net.Http.HttpRequestMessage,Microsoft.Data.Edm.IEdmModel)">
      <summary> Ordnet das angegebene EDM-Modell der Anforderung zu. </summary>
      <param name="request">Die Anforderung.</param>
      <param name="model">Das EDM-Modell, das der Anforderung zugeordnet werden soll.</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetInlineCount(System.Net.Http.HttpRequestMessage,System.Int64)">
      <summary> Legt die Inlineanzahl fest, die in der OData-Antwort verwendet werden soll. </summary>
      <param name="request">Die Anforderung.</param>
      <param name="inlineCount">Die Inlineanzahl, die zurück an den Client gesendet werden soll.</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetNextPageLink(System.Net.Http.HttpRequestMessage,System.Uri)">
      <summary> Legt den nächsten Seitenlink fest, der in der OData-Antwort verwendet werden soll. </summary>
      <param name="request">Die Anforderung.</param>
      <param name="nextPageLink">Der nächste Seitenlink, der zurück an den Client gesendet werden soll.</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetODataPath(System.Net.Http.HttpRequestMessage,System.Web.Http.OData.Routing.ODataPath)">
      <summary> Legt den OData-Pfad für die Anforderung fest. </summary>
      <param name="request">Die Anforderung.</param>
      <param name="odataPath">Der OData-Pfad der Anforderung.</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetODataPathHandler(System.Net.Http.HttpRequestMessage,System.Web.Http.OData.Routing.IODataPathHandler)">
      <summary> Legt den <see cref="T:System.Web.Http.OData.Routing.IODataPathHandler" /> fest, der zum Generieren von Links verwendet werden soll. </summary>
      <param name="request">Die Anforderung.</param>
      <param name="pathHandler">Der <see cref="T:System.Web.Http.OData.Routing.IODataPathHandler" />, der zum Generieren von Links verwendet werden soll.</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetODataRouteName(System.Net.Http.HttpRequestMessage,System.String)">
      <summary> Ruft den angegebenen Routennamen ab, der zum Generieren von OData-Links verwendet werden soll. </summary>
      <param name="request">Die Anforderung.</param>
      <param name="routeName">Der Routenname, der zum Generieren von OData-Links verwendet werden soll.</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetODataRoutingConventions(System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention})">
      <summary> Legt die OData-Routingkonventionen fest, die für die Controller- und Aktionsauswahl verwendet werden sollen. </summary>
      <param name="request">Die Anforderung.</param>
      <param name="routingConventions">Die OData-Routingkonventionen, die für die Controller- und Aktionsauswahl verwendet werden sollen.</param>
    </member>
    <member name="T:System.Web.Http.ODataHttpConfigurationExtensions"></member>
    <member name="M:System.Web.Http.ODataHttpConfigurationExtensions.EnableQuerySupport(System.Web.Http.HttpConfiguration)">
      <summary>Aktiviert Abfrageunterstützung für Aktionen mit einem Rückgabetyp von <see cref="T:System.Linq.IQueryable" /> oder <see cref="T:System.Linq.IQueryable`1" />. Damit die Verarbeitung unerwarteter oder böswilliger Abfragen vermieden wird, verwenden Sie die Überprüfungseinstellungen für <see cref="T:System.Web.Http.QueryableAttribute" />, um eingehende Abfragen zu überprüfen. Weitere Informationen finden Sie unter http://go.microsoft.com/fwlink/?LinkId=279712.            </summary>
      <param name="configuration">Die Serverkonfiguration.</param>
    </member>
    <member name="M:System.Web.Http.ODataHttpConfigurationExtensions.EnableQuerySupport(System.Web.Http.HttpConfiguration,System.Web.Http.Filters.IActionFilter)">
      <summary>Aktiviert Abfrageunterstützung für Aktionen mit einem Rückgabetyp von <see cref="T:System.Linq.IQueryable" /> oder <see cref="T:System.Linq.IQueryable`1" />. . Damit die Verarbeitung unerwarteter oder böswilliger Abfragen vermieden wird, verwenden Sie die Überprüfungseinstellungen für <see cref="T:System.Web.Http.QueryableAttribute" />, um eingehende Abfragen zu überprüfen. Weitere Informationen finden Sie unter http://go.microsoft.com/fwlink/?LinkId=279712.</summary>
      <param name="configuration">Die Serverkonfiguration.</param>
      <param name="queryFilter">Der Aktionsfilter, der die Abfrage ausführt.</param>
    </member>
    <member name="T:System.Web.Http.ODataHttpErrorExtensions">
      <summary>Stellt Erweiterungsmethoden für die <see cref="T:System.Web.Http.HttpError" />-Klasse bereit.</summary>
    </member>
    <member name="M:System.Web.Http.ODataHttpErrorExtensions.ToODataError(System.Web.Http.HttpError)">
      <summary>Konvertiert <paramref name="httpError" /> in einen <see cref="T:Microsoft.Data.OData.ODataError" />.</summary>
      <returns>Gibt <see cref="T:Microsoft.Data.OData.ODataError" /> zurück.</returns>
      <param name="httpError">Die zu konvertierende <see cref="T:System.Web.Http.HttpError" />-Instanz.</param>
    </member>
    <member name="T:System.Web.Http.ODataHttpRouteCollectionExtensions">
      <summary>Stellt Erweiterungsmethoden für die <see cref="T:System.Web.Http.HttpRouteCollection" />-Klasse bereit.</summary>
    </member>
    <member name="M:System.Web.Http.ODataHttpRouteCollectionExtensions.MapODataRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,Microsoft.Data.Edm.IEdmModel)">
      <summary>Ordnet die angegebene OData-Route ohne Routenpräfix und mit dem OData-Standardroutennamen zu.</summary>
      <param name="routes">Eine Auflistung der Routen für die Anwendung.</param>
      <param name="routeName">Der Name der zuzuordnenden Route.</param>
      <param name="routePrefix">Das Präfix, das der Pfadvorlage der OData-Route hinzugefügt werden soll.</param>
      <param name="model">Das EDM-Modell, das zum Analysieren von OData-Pfaden verwendet werden soll.</param>
    </member>
    <member name="M:System.Web.Http.ODataHttpRouteCollectionExtensions.MapODataRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.IODataPathHandler,System.Collections.Generic.IEnumerable{System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention})">
      <param name="routes">Eine Auflistung der Routen für die Anwendung.</param>
      <param name="routeName">Der Name der zuzuordnenden Route.</param>
      <param name="routePrefix">Das Präfix, das der Pfadvorlage der OData-Route hinzugefügt werden soll.</param>
      <param name="model">Das EDM-Modell, das zum Analysieren von OData-Pfaden verwendet werden soll.</param>
      <param name="pathHandler">Der <see cref="T:System.Web.Http.OData.Routing.IODataPathHandler" />, der zum Analysieren des OData-Pfads verwendet werden soll.</param>
      <param name="routingConventions">Die OData-Routingkonventionen, die für die Controller- und Aktionsauswahl verwendet werden sollen.</param>
    </member>
    <member name="T:System.Web.Http.ODataMediaTypeFormatterCollectionExtensions">
      <summary>Stellt Erweiterungsmethoden für die <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterCollection" />-Klasse bereit.</summary>
    </member>
    <member name="M:System.Web.Http.ODataMediaTypeFormatterCollectionExtensions.AddRange(System.Net.Http.Formatting.MediaTypeFormatterCollection,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>Fügt die Elemente der angegebenen Auflistung am Ende von <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterCollection" /> hinzu.</summary>
      <param name="collection">Die Auflistung, der die Elemente hinzugefügt werden sollen.</param>
      <param name="items">Die Elemente, die am Ende von <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterCollection" /> hinzugefügt werden sollen. Die Elementauflistung selbst darf nicht null sein, sie darf jedoch Elemente enthalten, die null sind.</param>
    </member>
    <member name="M:System.Web.Http.ODataMediaTypeFormatterCollectionExtensions.InsertRange(System.Net.Http.Formatting.MediaTypeFormatterCollection,System.Int32,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>  Fügt die Elemente einer Auflistung am angegebenen Index in <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterCollection" /> ein.</summary>
      <param name="collection">Die Auflistung, der die Elemente hinzugefügt werden sollen.</param>
      <param name="index">Der nullbasierte Index, an dem die neuen Elemente eingefügt werden sollen.</param>
      <param name="items">Die Elemente, die am Ende von <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterCollection" /> hinzugefügt werden sollen. Die Elementauflistung selbst darf nicht null sein, sie darf jedoch Elemente enthalten, die null sind.</param>
    </member>
    <member name="T:System.Web.Http.ODataUrlHelperExtensions">
      <summary>Stellt Erweiterungsmethoden für die <see cref="T:System.Web.Http.Routing.UrlHelper" />-Klasse bereit.</summary>
    </member>
    <member name="M:System.Web.Http.ODataUrlHelperExtensions.ODataLink(System.Web.Http.Routing.UrlHelper,System.Collections.Generic.IList{System.Web.Http.OData.Routing.ODataPathSegment})">
      <summary>Generiert einen OData-Link.</summary>
      <returns>Gibt <see cref="T:System.String" /> zurück.</returns>
      <param name="urlHelper">Das URL-Hilfsprogramm.</param>
      <param name="segments">Die OData-Pfadsegmente.</param>
    </member>
    <member name="M:System.Web.Http.ODataUrlHelperExtensions.ODataLink(System.Web.Http.Routing.UrlHelper,System.String,System.Web.Http.OData.Routing.IODataPathHandler,System.Collections.Generic.IList{System.Web.Http.OData.Routing.ODataPathSegment})">
      <summary>Generiert einen OData-Link mithilfe des OData-Routennamens und des Pfadhandlers der Anforderung.</summary>
      <returns>Gibt <see cref="T:System.String" /> zurück.</returns>
      <param name="urlHelper">Das URL-Hilfsprogramm.</param>
      <param name="routeName">Der Name der OData-Route.</param>
      <param name="pathHandler">Der Pfadhandler, der zum Generieren des Links verwendet werden soll.</param>
      <param name="segments">Die OData-Pfadsegmente.</param>
    </member>
    <member name="M:System.Web.Http.ODataUrlHelperExtensions.ODataLink(System.Web.Http.Routing.UrlHelper,System.Web.Http.OData.Routing.ODataPathSegment[])">
      <summary>Generiert einen OData-Link.</summary>
      <returns>Gibt <see cref="T:System.String" /> zurück.</returns>
      <param name="urlHelper">Das URL-Hilfsprogramm.</param>
      <param name="segments">Die OData-Pfadsegmente.</param>
    </member>
    <member name="T:System.Web.Http.QueryableAttribute">
      <summary>Diese Klasse definiert ein Attribut, das auf eine Aktion angewendet werden kann, um Abfragen mithilfe der OData-Abfragesyntax zu aktivieren.  Damit die Verarbeitung unerwarteter oder böswilliger Abfragen vermieden wird, verwenden Sie die Überprüfungseinstellungen für <see cref="T:System.Web.Http.QueryableAttribute" />, um eingehende Abfragen zu überprüfen. Weitere Informationen finden Sie unter http://go.microsoft.com/fwlink/?LinkId=279712.</summary>
    </member>
    <member name="M:System.Web.Http.QueryableAttribute.#ctor">
      <summary>Ermöglicht, dass eine Controlleraktion OData-Abfrageparameter unterstützt.</summary>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.AllowedArithmeticOperators">
      <summary>Ruft eine Enumeration ab, die eine Liste der zulässigen arithmetischen Operatoren einschließlich add, sub, mul, div, mod darstellt, bzw. legt diese fest.</summary>
      <returns>Gibt <see cref="T:System.Web.Http.OData.Query.AllowedArithmeticOperators" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.AllowedFunctions">
      <summary>Ruft eine Enumeration ab, die eine Liste der zulässigen in der $filter-Abfrage verwendeten Funktionen darstellt, bzw. legt diese fest. </summary>
      <returns>Gibt <see cref="T:System.Web.Http.OData.Query.AllowedFunctions" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.AllowedLogicalOperators">
      <summary>Ruft eine Enumeration ab, die eine Liste der zulässigen logischen Operatoren einschließlich eq, ne, gt, ge, lt, le, and, or, not darstellt, bzw. legt diese fest.</summary>
      <returns>Gibt <see cref="T:System.Web.Http.OData.Query.AllowedLogicalOperators" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.AllowedOrderByProperties">
      <summary>Ruft eine Zeichenfolge mit einer durch Kommas getrennte Liste von Eigenschaftennamen ab bzw. legt diese fest. Das abfragbare Ergebnis kann nur nach diesen in dieser Liste definierten Eigenschaften sortiert sein.</summary>
      <returns>Gibt <see cref="T:System.String" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.AllowedQueryOptions">
      <summary>Ruft die Abfrageparameter ab, die in der Abfrage zulässig sind, oder legt sie fest. Die Standardeinstellung berücksichtigt alle Abfrageoptionen einschließlich $filter, $skip, $top, $orderby, $expand, $select, $inlineCount, $format und $skipToken.</summary>
      <returns>Gibt <see cref="T:System.Web.Http.OData.Query.AllowedQueryOptions" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.QueryableAttribute.ApplyQuery(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQueryOptions)">
      <summary>Wendet die Abfrage auf das angegebene IQueryable-Objekt basierend auf der eingehenden Abfrage aus dem URI und den Abfrageeinstellungen an.</summary>
      <returns>Gibt <see cref="T:System.Linq.IQueryable" /> zurück.</returns>
      <param name="queryable">Die ursprüngliche abfragbare Instanz aus der Antwortnachricht.</param>
      <param name="queryOptions">Die &lt;siehe cref="T:System.Web.Http.OData.Query.ODataQueryOptions"/&gt; Instanz, die basierend auf der eingehenden Anforderung erstellt wird.</param>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.EnableConstantParameterization">
      <summary>Ruft einen Wert ab, der angibt, ob Konstanten parameterisiert werden sollen, oder legt diesen Wert fest. Das Parameterisieren von Konstanten führt zu einer optimierten Leistung mit Entity Framework.</summary>
      <returns>Der Standardwert ist True.</returns>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.EnsureStableOrdering">
      <summary>Ruft einen Wert ab, der angibt, ob die Abfragekomposition die ursprüngliche Abfrage bei Bedarf ändern soll, um eine stabile Sortierreihenfolge sicherzustellen, bzw. legt diesen Wert fest.</summary>
      <returns>Ein Wert von true zeigt an, dass die ursprüngliche Abfrage bei Bedarf geändert werden soll, um eine stabile Sortierreihenfolge zu gewährleisten. Ein Wert von false zeigt an, dass die Sortierreihenfolge als stabil betrachtet werden kann, ohne die Abfrage zu ändern. Abfrageanbieter, die eine stabile Sortierreihenfolge gewährleisten, sollten diesen Wert auf false festlegen. Der Standardwert ist true.</returns>
    </member>
    <member name="M:System.Web.Http.QueryableAttribute.GetModel(System.Type,System.Net.Http.HttpRequestMessage,System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Ruft das EDM-Modell für den angegebenen Typ und die Anforderung ab.</summary>
      <returns>Das EDM-Modell für den angegebenen Typ und die Anforderung.</returns>
      <param name="elementClrType">Der CLR-Typ, für den ein Modell abgerufen werden soll.</param>
      <param name="request">Die Anforderungsnachricht, für die ein Modell abgerufen werden soll.</param>
      <param name="actionDescriptor">Der Aktionsdeskriptor für die Aktion, für die die Abfrage erfolgt.</param>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.HandleNullPropagation">
      <summary>Ruft einen Wert ab, der angibt, wie Nullweitergabe während der Abfragekomposition verarbeitet werden soll, bzw. legt diesen Wert fest.</summary>
      <returns>Der Standardwert ist <see cref="F:System.Web.Http.OData.Query.HandleNullPropagationOption.Default" />.</returns>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.MaxAnyAllExpressionDepth">
      <summary>Ruft die maximale Tiefe der geschachtelten Any- oder All-Elemente in der Abfrage ab bzw. legt diese fest.</summary>
      <returns>Die maximale Tiefe der geschachtelten Any- oder All-Elemente in der Abfrage.</returns>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.MaxNodeCount">
      <summary>Ruft die maximale Anzahl von Knoten in der $filter-Syntaxstruktur ab oder legt diese fest.</summary>
      <returns>  Der Standardwert ist 100.</returns>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.MaxSkip">
      <summary>Ruft den maximalen Wert von $skip ab, den ein Client anfordern kann, oder legt ihn fest.</summary>
      <returns>Gibt <see cref="T:System.Int32" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.MaxTop">
      <summary>Ruft den maximalen Wert von $top ab, den ein Client anfordern kann, oder legt ihn fest.</summary>
      <returns>Gibt <see cref="T:System.Int32" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.QueryableAttribute.OnActionExecuted(System.Web.Http.Filters.HttpActionExecutedContext)">
      <summary>Führt die Abfragekomposition aus, nachdem die Aktion ausgeführt wurde. Zuerst wird versucht, IQueryable aus der zurückgegebenen Antwortnachricht abzurufen. Dann wird die Abfrage aus dem URI basierend auf den Überprüfungseinstellungen für QueryableAttribute überprüft. Schließlich wird die Abfrage entsprechend angewendet und für die Antwortnachricht zurückgesetzt.</summary>
      <param name="actionExecutedContext">Der Kontext, der sich auf diese Aktion bezieht, einschließlich Antwortnachricht, Anforderungsnachricht, HttpConfiguration usw.</param>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.PageSize">
      <summary>Ruft die maximale Anzahl von Abfrageergebnissen ab, die zurück an Clients gesendet werden sollen, bzw. legt diesen Wert fest.</summary>
      <returns>  Die maximale Anzahl von Abfrageergebnissen, die zurück an Clients gesendet werden sollen.</returns>
    </member>
    <member name="M:System.Web.Http.QueryableAttribute.ValidateQuery(System.Net.Http.HttpRequestMessage,System.Web.Http.OData.Query.ODataQueryOptions)">
      <summary>Überprüft die OData-Abfrage in der eingehenden Anforderung.</summary>
      <param name="request">Die eingehende Anforderung.</param>
      <param name="queryOptions">Die <see cref="T:System.Web.Http.OData.Query.ODataQueryOptions" />-Instanz, die basierend auf der eingehenden Nachricht erstellt wird.</param>
    </member>
    <member name="T:System.Web.Http.OData.AsyncEntitySetController`2">
      <summary>Stellt einen nützlichen Startpunkt für einen Controller zur Verfügung, der eine OData-Entitätssammlung bereitstellt. Dies ist die synchrone Version von <see cref="T:System.Web.Http.OData.AsyncEntitySetController" />.     </summary>
      <typeparam name="TEntity">Der Typ, der dem Entitätstyp der bereitgestellten Entitätssammlung zugeordnet ist.</typeparam>
      <typeparam name="TKey">Der Typ, der dem Entitätsschlüssel des Entitätstyps der bereitgestellten Entitätssammlung zugeordnet ist.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.#ctor">
      <summary>Initialisiert eine neue Instanz von <see cref="T:System.Web.Http.OData.AsyncEntitySetController`2" />. </summary>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.CreateEntityAsync(`0)">
      <summary>Diese Methode sollte außer Kraft gesetzt werden, um eine neue Entität in der Entitätssammlung zu erstellen.</summary>
      <returns>Die erstellte Entität.</returns>
      <param name="entity">Die Entität, die der Entitätssammlung hinzugefügt werden soll.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.CreateLink(`1,System.String,System.Uri)">
      <summary>Diese Methode sollte außer Kraft gesetzt werden, um POST- und PUT-Anforderungen zu verarbeiten, die versuchen, einen Link zwischen zwei Entitäten zu erstellen.</summary>
      <returns>Gibt <see cref="T:System.Threading.Tasks.Task" /> zurück.</returns>
      <param name="key">Der Schlüssel der Entität mit der Navigationseigenschaft.</param>
      <param name="navigationProperty">Der Name der Navigationseigenschaft.</param>
      <param name="link">Der URI der zu verknüpfenden Entität.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.Delete(`1)">
      <summary>Diese Methode sollte außer Kraft gesetzt werden, um DELETE-Anforderungen zum Löschen vorhandener Entitäten aus der Entitätssammlung zu verarbeiten.</summary>
      <returns>Gibt <see cref="T:System.Threading.Tasks.Task" /> zurück.</returns>
      <param name="key">Der Entitätsschlüssel der zu löschenden Entität.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.DeleteLink(`1,System.String,System.String)">
      <summary>Diese Methode sollte außer Kraft gesetzt werden, um DELETE-Anforderungen zu verarbeiten, die versuchen, eine Beziehung zwischen zwei Entitäten zu unterbrechen.</summary>
      <returns>Gibt <see cref="T:System.Threading.Tasks.Task" /> zurück.</returns>
      <param name="key">Der Schlüssel der Entität mit der Navigationseigenschaft.</param>
      <param name="relatedKey">Der Schlüssel der zugehörigen Entität.</param>
      <param name="navigationProperty">Der Name der Navigationseigenschaft.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.DeleteLink(`1,System.String,System.Uri)">
      <summary>  Diese Methode sollte außer Kraft gesetzt werden, um DELETE-Anforderungen zu verarbeiten, die versuchen, eine Beziehung zwischen zwei Entitäten zu unterbrechen.</summary>
      <returns>Gibt <see cref="T:System.Threading.Tasks.Task" /> zurück.</returns>
      <param name="key">Der Schlüssel der Entität mit der Navigationseigenschaft.</param>
      <param name="navigationProperty">Der Name der Navigationseigenschaft.</param>
      <param name="link">Der URI der Entität, die aus der Navigationseigenschaft entfernt werden soll.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.Get">
      <summary>Diese Methode sollte außer Kraft gesetzt werden, um GET-Anforderungen zum Abrufen von Entitäten aus der Entitätssammlung zu verarbeiten.          </summary>
      <returns>Die übereinstimmenden Entitäten aus der Entitätssammlung.</returns>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.Get(`1)">
      <summary>Verarbeitet GET-Anforderungen, die versuchen, eine einzelne Entität nach ihrem Schlüssel aus der Entitätssammlung abzurufen.</summary>
      <returns>Die Antwortnachricht, die zurück an den Client gesendet werden soll.</returns>
      <param name="key">Der Entitätsschlüssel der abzurufenden Entität.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.GetEntityByKeyAsync(`1)">
      <summary>  Diese Methode sollte außer Kraft gesetzt werden, um eine Entität nach ihrem Schlüssel aus der Entitätssammlung abzurufen.</summary>
      <returns>Die abgerufene Entität oder null, wenn eine Entität mit dem angegebenen Entitätsschlüssel nicht in der Entitätssammlung gefunden werden kann.</returns>
      <param name="key">Der Entitätsschlüssel der abzurufenden Entität.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.GetKey(`0)">
      <summary>Diese Methode sollte außer Kraft gesetzt werden, um den Entitätsschlüssel der angegebenen Entität abzurufen.</summary>
      <returns>Der Wert des Entitätsschlüssels.</returns>
      <param name="entity">Die Entität.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.HandleUnmappedRequest(System.Web.Http.OData.Routing.ODataPath)">
      <summary>   Diese Methode sollte außer Kraft gesetzt werden, um alle nicht zugeordneten OData-Anforderungen zu verarbeiten.</summary>
      <returns>Die Antwortnachricht, die zurück an den Client gesendet werden soll.</returns>
      <param name="odataPath">Der OData-Pfad der Anforderung.</param>
    </member>
    <member name="P:System.Web.Http.OData.AsyncEntitySetController`2.ODataPath">
      <summary>Ruft den OData-Pfad der aktuellen Anforderung ab.</summary>
      <returns>Gibt <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.Patch(`1,System.Web.Http.OData.Delta{`0})">
      <summary>Verarbeitet PATCH- und MERGE-Anforderungen, um eine einzelne Entität in der Entitätssammlung teilweise zu aktualisieren.</summary>
      <returns>Die Antwortnachricht, die zurück an den Client gesendet werden soll.</returns>
      <param name="key">Der Entitätsschlüssel der zu aktualisierenden Entität.</param>
      <param name="patch">Der Patch, der die teilweise Aktualisierung darstellt.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.PatchEntityAsync(`1,System.Web.Http.OData.Delta{`0})">
      <summary>   Diese Methode sollte außer Kraft gesetzt werden, um eine teilweise Aktualisierung auf eine vorhandene Entität in der Entitätssammlung anzuwenden.</summary>
      <returns>Gibt <see cref="T:System.Threading.Tasks.Task`1" /> zurück.</returns>
      <param name="key">Der Entitätsschlüssel der zu aktualisierenden Entität.</param>
      <param name="patch">Der Patch, der die teilweise Aktualisierung darstellt.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.Post(`0)">
      <summary>Verarbeitet POST-Anforderungen, die neue Entitäten in der Entitätssammlung erstellen.</summary>
      <returns>Die Antwortnachricht, die zurück an den Client gesendet werden soll.</returns>
      <param name="entity">Die Entität, die in die Entitätssammlung eingefügt werden soll.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.Put(`1,`0)">
      <summary>  Verarbeitet PUT-Anforderungen, die versuchen, eine einzelne Entität in der Entitätssammlung zu ersetzen.</summary>
      <returns>Die Antwortnachricht, die zurück an den Client gesendet werden soll.</returns>
      <param name="key">Der Entitätsschlüssel der zu ersetzenden Entität.</param>
      <param name="update">Die aktualisierte Entität.</param>
    </member>
    <member name="P:System.Web.Http.OData.AsyncEntitySetController`2.QueryOptions">
      <summary>Ruft die OData-Abfrageoptionen der aktuellen Anforderung ab.</summary>
      <returns>Gibt <see cref="T:System.Web.Http.OData.Query.ODataQueryOptions`1" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.UpdateEntityAsync(`1,`0)">
      <summary>Diese Methode sollte außer Kraft gesetzt werden, um eine vorhandene Entität in der Entitätssammlung zu aktualisieren.</summary>
      <returns>Die aktualisierte Entität.</returns>
      <param name="key">Der Entitätsschlüssel der zu aktualisierenden Entität.</param>
      <param name="update">Die aktualisierte Entität.</param>
    </member>
    <member name="T:System.Web.Http.OData.ClrTypeAnnotation">
      <summary>Represents a mapping from an <see cref="T:Microsoft.Data.Edm.IEdmType" /> to a CLR type.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ClrTypeAnnotation.#ctor(System.Type)">
      <summary>Initializes a new instance of <see cref="T:System.Web.Http.OData.ClrTypeAnnotation" /> class.</summary>
      <param name="clrType">The backing CLR type for the EDM type.</param>
    </member>
    <member name="P:System.Web.Http.OData.ClrTypeAnnotation.ClrType">
      <summary>The backing CLR type for the EDM type.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Delta`1">
      <summary>Eine Klasse, die Änderungen (z. B. das Delta) für einen bestimmten <paramref name="TEntityType" /> nachverfolgt.</summary>
      <typeparam name="TEntityType">TEntityType ist der Basistyp der Entität, für die dieses Delta Änderungen nachverfolgt.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.#ctor">
      <summary>Initialisiert eine neue Instanz von <see cref="T:System.Web.Http.OData.Delta`1" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.#ctor(System.Type)">
      <summary>Initialisiert eine neue Instanz von <see cref="T:System.Web.Http.OData.Delta`1" />.</summary>
      <param name="entityType">Der abgeleitete Entitätstyp, für den die Änderungen nachverfolgt werden. <paramref name="entityType" /> sollte Instanzen von <paramref name="TEntityType" /> zugewiesen werden können.</param>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.Clear">
      <summary>Löscht das Delta und setzt die zugrunde liegende Entität zurück.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.CopyChangedValues(`0)">
      <summary>Kopiert die geänderten Eigenschaftenwerte aus der zugrunde liegenden Entität (auf die über <see cref="M:System.Web.Http.OData.Delta`1.GetEntity" /> zugegriffen werden kann) in die <paramref name="original" />-Entität.</summary>
      <param name="original">Die zu aktualisierende Entität.</param>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.CopyUnchangedValues(`0)">
      <summary>Kopiert die unveränderten Eigenschaftenwerte aus der zugrunde liegenden Entität (auf die über <see cref="M:System.Web.Http.OData.Delta`1.GetEntity" /> zugegriffen werden kann) in die <paramref name="original" />-Entität.</summary>
      <param name="original">Die zu aktualisierende Entität.</param>
    </member>
    <member name="P:System.Web.Http.OData.Delta`1.EntityType">
      <summary>  Der tatsächliche Typ der Entität, für die Änderungen nachverfolgt werden.</summary>
      <returns>Gibt <see cref="T:System.Type" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.GetChangedPropertyNames">
      <summary>Gibt die Eigenschaften zurück, die durch dieses Delta als eine Enumeration von Eigenschaftennamen geändert wurden.</summary>
      <returns>Gibt <see cref="T:System.Collections.Generic.IEnumerable`1" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.GetEntity">
      <summary>Gibt die <see cref="P:System.Web.Http.OData.Delta`1.EntityType" />-Instanz zurück, die alle Änderungen (und die ursprünglichen Werte) enthält, die von diesem Delta nachverfolgt werden.</summary>
      <returns>Gibt <see cref="T:System.Collections.Generic.IEnumerable`1" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.GetUnchangedPropertyNames">
      <summary>  Gibt die Eigenschaften zurück, die nicht durch dieses Delta als eine Enumeration von Eigenschaftennamen geändert wurden.</summary>
      <returns>Gibt <see cref="T:System.Collections.Generic.IEnumerable`1" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.Patch(`0)">
      <summary>Überschreibt die <paramref name="original" />-Entität mit den von diesem Delta nachverfolgten Änderungen. </summary>
      <param name="original">Die zu aktualisierende Entität.</param>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.Put(`0)">
      <summary>Überschreibt die <paramref name="original" />-Entität mit den in diesem Delta gespeicherten Werten.</summary>
      <param name="original">Die zu aktualisierende Entität.</param>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
      <summary>Überschreibt die DynamicObject-Methode TryGetMember so, dass nur die Eigenschaften von <see cref="P:System.Web.Http.OData.Delta`1.EntityType" /> abgerufen werden können.</summary>
      <returns>Gibt <see cref="T:System.Boolean" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.TryGetPropertyType(System.String,System.Type@)">
      <summary>Versucht, den <see cref="T:System.Type" /> der Eigenschaft namens <paramref name="name" /> aus der zugrunde liegenden Entität abzurufen.</summary>
      <returns>true, wenn die Eigenschaft gefunden wurde, andernfalls false.</returns>
      <param name="name">Der Name der Eigenschaft.</param>
      <param name="type">Der Typ der Eigenschaft.</param>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.TryGetPropertyValue(System.String,System.Object@)">
      <summary>Versucht, den Wert der Eigenschaft namens <paramref name="name" /> aus der zugrunde liegenden Entität abzurufen.</summary>
      <returns>true, wenn die Eigenschaft gefunden wurde.</returns>
      <param name="name">Der Name der Eigenschaft.</param>
      <param name="value">Der Wert der Eigenschaft.</param>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
      <summary>Überschreibt die DynamicObject-Methode TrySetMember so, dass nur die Eigenschaften von <see cref="P:System.Web.Http.OData.Delta`1.EntityType" /> festgelegt werden können.</summary>
      <returns>Gibt <see cref="T:System.Boolean" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.TrySetPropertyValue(System.String,System.Object)">
      <summary>  Versucht, die Eigenschaft namens <paramref name="name" /> auf den angegebenen <paramref name="value" /> festzulegen.</summary>
      <returns>Bei Erfolg true, andernfalls false.</returns>
      <param name="name">Der Name der Eigenschaft.</param>
      <param name="value">Der neue Wert der Eigenschaft.</param>
    </member>
    <member name="T:System.Web.Http.OData.EntityInstanceContext">
      <summary>Eine Instanz von <see cref="T:System.Web.Http.OData.EntityInstanceContext`1" /> wird an die self-link- (<see cref="M:EntitySetConfiguration.HasIdLink" />, <see cref="M:EntitySetConfiguration.HasEditLink" />, <see cref="M:EntitySetConfiguration.HasReadLink" />) und Navigationslinkgeneratoren (<see cref="M:EntitySetConfiguration.HasNavigationPropertyLink" />, <see cref="M:EntitySetConfiguration.HasNavigationPropertiesLink" />) übergeben und kann von den Linkgeneratoren zum Generieren von Links verwendet werden.</summary>
    </member>
    <member name="M:System.Web.Http.OData.EntityInstanceContext.#ctor"></member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.EdmModel">
      <summary>Ruft die <see cref="T:Microsoft.Data.Edm.IEdmModel" /> ab.</summary>
      <returns>Gibt <see cref="T:Microsoft.Data.Edm.IEdmModel" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.EntityInstance">
      <summary>Ruft den Wert dieser Entitätsinstanz ab.</summary>
      <returns>Gibt <see cref="T:System.Object" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.EntitySet">
      <summary>Ruft das <see cref="T:Microsoft.Data.Edm.IEdmEntitySet" />-Objekt ab, zu dem diese Instanz gehört.</summary>
      <returns>Gibt <see cref="T:Microsoft.Data.Edm.IEdmEntitySet" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.EntityType">
      <summary>Ruft den <see cref="T:Microsoft.Data.Edm.IEdmEntityType" /> dieser Entitätsinstanz ab.</summary>
      <returns>Gibt <see cref="T:Microsoft.Data.Edm.IEdmEntityType" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.Request">
      <returns>Gibt <see cref="T:System.Net.Http.HttpRequestMessage" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.SkipExpensiveAvailabilityChecks">
      <summary>Ruft ab, ob ActionAvailabilityChecks ausgeführt werden soll. Dieser Vorgang wird verwendet, um den Formatierer zu informieren, ob die Verfügbarkeit einer Aktion überprüft werden soll, bevor ein Link zu ihr eingeschlossen wird. In einem Feed wird diese Überprüfung übersprungen.</summary>
      <returns>Gibt <see cref="T:System.Boolean" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.Url">
      <returns>Gibt <see cref="T:System.Web.Http.Routing.UrlHelper" /> zurück.</returns>
    </member>
    <member name="T:System.Web.Http.OData.EntityInstanceContext`1">
      <summary>Eine Instanz von <see cref="T:System.Web.Http.OData.EntityInstanceContext`1" /> wird an die self-link- (<see cref="M:EntitySetConfiguration.HasIdLink" />, <see cref="M:EntitySetConfiguration.HasEditLink" />, <see cref="M:EntitySetConfiguration.HasReadLink" />) und Navigationslinkgeneratoren (<see cref="M:EntitySetConfiguration.HasNavigationPropertyLink" />, <see cref="M:EntitySetConfiguration.HasNavigationPropertiesLink" />) übergeben und kann von den Linkgeneratoren zum Generieren von Links verwendet werden.</summary>
      <typeparam name="TEntityType">Der Entitätstyp.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.EntityInstanceContext`1.#ctor"></member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext`1.EntityInstance"></member>
    <member name="T:System.Web.Http.OData.EntitySetController`2">
      <summary>Stellt einen nützlichen Startpunkt für einen Controller zur Verfügung, der eine OData-Entitätssammlung bereitstellt. Dies ist die synchrone Version von <see cref="T:System.Web.Http.OData.AsyncEntitySetController`2" />.</summary>
      <typeparam name="TEntity">Der Typ, der dem Entitätstyp der bereitgestellten Entitätssammlung zugeordnet ist.</typeparam>
      <typeparam name="TKey">Der Typ, der dem Entitätsschlüssel des Entitätstyps der bereitgestellten Entitätssammlung zugeordnet ist.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.#ctor"></member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.CreateEntity(`0)">
      <summary>  Diese Methode sollte außer Kraft gesetzt werden, um eine neue Entität in der Entitätssammlung zu erstellen.</summary>
      <returns>Die erstellte Entität.</returns>
      <param name="entity">Die Entität, die der Entitätssammlung hinzugefügt werden soll.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.CreateLink(`1,System.String,System.Uri)">
      <summary>Diese Methode sollte außer Kraft gesetzt werden, um POST- und PUT-Anforderungen zu verarbeiten, die versuchen, einen Link zwischen zwei Entitäten zu erstellen.</summary>
      <param name="key">Der Schlüssel der Entität mit der Navigationseigenschaft.</param>
      <param name="navigationProperty">Der Name der Navigationseigenschaft.</param>
      <param name="link">Der URI der zu verknüpfenden Entität.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.Delete(`1)">
      <summary>   Diese Methode sollte außer Kraft gesetzt werden, um DELETE-Anforderungen zum Löschen vorhandener Entitäten aus der Entitätssammlung zu verarbeiten.</summary>
      <param name="key">Der Entitätsschlüssel der zu löschenden Entität.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.DeleteLink(`1,System.String,System.String)">
      <summary>Diese Methode sollte außer Kraft gesetzt werden, um DELETE-Anforderungen zu verarbeiten, die versuchen, eine Beziehung zwischen zwei Entitäten zu unterbrechen.</summary>
      <param name="key">Der Schlüssel der Entität mit der Navigationseigenschaft.</param>
      <param name="relatedKey">Der Schlüssel der zugehörigen Entität.</param>
      <param name="navigationProperty">Der Name der Navigationseigenschaft.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.DeleteLink(`1,System.String,System.Uri)">
      <summary>  Diese Methode sollte außer Kraft gesetzt werden, um DELETE-Anforderungen zu verarbeiten, die versuchen, eine Beziehung zwischen zwei Entitäten zu unterbrechen.</summary>
      <param name="key">Der Schlüssel der Entität mit der Navigationseigenschaft.</param>
      <param name="navigationProperty">Der Name der Navigationseigenschaft.</param>
      <param name="link">Der URI der Entität, die aus der Navigationseigenschaft entfernt werden soll.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.Get">
      <summary>Diese Methode sollte außer Kraft gesetzt werden, um GET-Anforderungen zum Abrufen von Entitäten aus der Entitätssammlung zu verarbeiten.</summary>
      <returns>Die übereinstimmenden Entitäten aus der Entitätssammlung.</returns>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.Get(`1)">
      <summary>Verarbeitet GET-Anforderungen, die versuchen, eine einzelne Entität nach ihrem Schlüssel aus der Entitätssammlung abzurufen.</summary>
      <returns>Die Antwortnachricht, die zurück an den Client gesendet werden soll.</returns>
      <param name="key">Der Entitätsschlüssel der abzurufenden Entität.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.GetEntityByKey(`1)">
      <summary>Diese Methode sollte außer Kraft gesetzt werden, um eine Entität nach ihrem Schlüssel aus der Entitätssammlung abzurufen.</summary>
      <returns>Die abgerufene Entität oder null, wenn eine Entität mit dem angegebenen Entitätsschlüssel nicht in der Entitätssammlung gefunden werden kann.</returns>
      <param name="key">Der Entitätsschlüssel der abzurufenden Entität.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.GetKey(`0)">
      <summary>Diese Methode sollte außer Kraft gesetzt werden, um den Entitätsschlüssel der angegebenen Entität abzurufen.</summary>
      <returns>Der Wert des Entitätsschlüssels.</returns>
      <param name="entity">Die Entität.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.HandleUnmappedRequest(System.Web.Http.OData.Routing.ODataPath)">
      <summary>Diese Methode sollte außer Kraft gesetzt werden, um alle nicht zugeordneten OData-Anforderungen zu verarbeiten.</summary>
      <returns>Die Antwortnachricht, die zurück an den Client gesendet werden soll.</returns>
      <param name="odataPath">Der OData-Pfad der Anforderung.</param>
    </member>
    <member name="P:System.Web.Http.OData.EntitySetController`2.ODataPath">
      <summary>Ruft den OData-Pfad der aktuellen Anforderung ab.</summary>
      <returns>Gibt <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.Patch(`1,System.Web.Http.OData.Delta{`0})">
      <summary>   Verarbeitet PATCH- und MERGE-Anforderungen, um eine einzelne Entität in der Entitätssammlung teilweise zu aktualisieren.</summary>
      <returns>Die Antwortnachricht, die zurück an den Client gesendet werden soll.</returns>
      <param name="key">Der Entitätsschlüssel der zu aktualisierenden Entität.</param>
      <param name="patch">Der Patch, der die teilweise Aktualisierung darstellt.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.PatchEntity(`1,System.Web.Http.OData.Delta{`0})">
      <summary>   Diese Methode sollte außer Kraft gesetzt werden, um eine teilweise Aktualisierung auf eine vorhandene Entität in der Entitätssammlung anzuwenden.</summary>
      <returns>Die aktualisierte Entität.</returns>
      <param name="key">Der Entitätsschlüssel der zu aktualisierenden Entität.</param>
      <param name="patch">Der Patch, der die teilweise Aktualisierung darstellt.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.Post(`0)">
      <summary>Verarbeitet POST-Anforderungen, die neue Entitäten in der Entitätssammlung erstellen.</summary>
      <returns>Die Antwortnachricht, die zurück an den Client gesendet werden soll.</returns>
      <param name="entity">Die Entität, die in die Entitätssammlung eingefügt werden soll.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.Put(`1,`0)">
      <summary>Verarbeitet PUT-Anforderungen, die versuchen, eine einzelne Entität in der Entitätssammlung zu ersetzen.</summary>
      <returns>Die Antwortnachricht, die zurück an den Client gesendet werden soll.</returns>
      <param name="key">Der Entitätsschlüssel der zu ersetzenden Entität.</param>
      <param name="update">Die aktualisierte Entität.</param>
    </member>
    <member name="P:System.Web.Http.OData.EntitySetController`2.QueryOptions">
      <summary>  Ruft die OData-Abfrageoptionen der aktuellen Anforderung ab.</summary>
      <returns>Gibt <see cref="T:System.Web.Http.OData.Query.ODataQueryOptions`1" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.UpdateEntity(`1,`0)">
      <summary>   Diese Methode sollte außer Kraft gesetzt werden, um eine vorhandene Entität in der Entitätssammlung zu aktualisieren.</summary>
      <returns>Die aktualisierte Entität.</returns>
      <param name="key">Der Entitätsschlüssel der zu aktualisierenden Entität.</param>
      <param name="update">Die aktualisierte Entität.</param>
    </member>
    <member name="T:System.Web.Http.OData.FeedContext">
      <summary>Enthält Kontextinformationen zum Feed, der zurzeit serialisiert wird.</summary>
    </member>
    <member name="M:System.Web.Http.OData.FeedContext.#ctor"></member>
    <member name="P:System.Web.Http.OData.FeedContext.EntitySet">
      <summary>Ruft das <see cref="T:Microsoft.Data.Edm.IEdmEntitySet" />-Objekt ab, zu dem diese Instanz gehört.</summary>
    </member>
    <member name="P:System.Web.Http.OData.FeedContext.FeedInstance">
      <summary>Ruft den Wert dieser Feedinstanz ab.</summary>
    </member>
    <member name="P:System.Web.Http.OData.FeedContext.Request"></member>
    <member name="P:System.Web.Http.OData.FeedContext.Url"></member>
    <member name="T:System.Web.Http.OData.FromODataUriAttribute">
      <summary>Eine Implementierung von <see cref="T:System.Web.Http.ParameterBindingAttribute" />, die URI-Parameter mithilfe von OData-Konventionen binden kann.</summary>
    </member>
    <member name="M:System.Web.Http.OData.FromODataUriAttribute.#ctor"></member>
    <member name="M:System.Web.Http.OData.FromODataUriAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Ruft die Bindung für einen Parameter ab.</summary>
      <returns>Das <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" />-Objekt, das die Bindung enthält.</returns>
      <param name="parameter">Der zu bindende Parameter.</param>
    </member>
    <member name="T:System.Web.Http.OData.IDelta">
      <summary>Ermöglicht Änderungen an einem Objekt und verfolgt diese nach.</summary>
    </member>
    <member name="M:System.Web.Http.OData.IDelta.Clear">
      <summary>Löscht das <see cref="T:System.Web.Http.OData.IDelta" />-Objekt.</summary>
    </member>
    <member name="M:System.Web.Http.OData.IDelta.GetChangedPropertyNames">
      <summary>Gibt die Eigenschaften zurück, die durch dieses IDelta ggf. als ein aufzählbares Objekt von Eigenschaftennamen geändert wurden.</summary>
      <returns>Gibt <see cref="T:System.Collections.Generic.IEnumerable`1" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.OData.IDelta.GetUnchangedPropertyNames">
      <summary>Gibt die Eigenschaften zurück, die durch dieses IDelta nicht als ein aufzählbares Objekt von Eigenschaftennamen geändert wurden.</summary>
      <returns>Gibt <see cref="T:System.Collections.Generic.IEnumerable`1" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.OData.IDelta.TryGetPropertyType(System.String,System.Type@)">
      <summary>Versucht, den <see cref="T:System.Type" /> der Eigenschaft namens <paramref name="name" /> aus der zugrunde liegenden Entität abzurufen.</summary>
      <returns>Gibt true zurück, wenn die Eigenschaft gefunden wurde, andernfalls false.</returns>
      <param name="name">Der Name der Eigenschaft.</param>
      <param name="type">Der Typ der Eigenschaft.</param>
    </member>
    <member name="M:System.Web.Http.OData.IDelta.TryGetPropertyValue(System.String,System.Object@)">
      <summary>Versucht, den Wert der Eigenschaft namens <paramref name="name" /> aus der zugrunde liegenden Entität abzurufen.</summary>
      <returns>Gibt true zurück, wenn die Eigenschaft gefunden wurde, andernfalls false.</returns>
      <param name="name">Der Name der Eigenschaft.</param>
      <param name="value">Der Wert der Eigenschaft.</param>
    </member>
    <member name="M:System.Web.Http.OData.IDelta.TrySetPropertyValue(System.String,System.Object)">
      <summary>Versucht, die Eigenschaft namens <paramref name="name" /> auf den angegebenen <paramref name="value" /> festzulegen.</summary>
      <returns>Gibt bei Erfolg true zurück, andernfalls false.</returns>
      <param name="name">Der Name der Eigenschaft.</param>
      <param name="value">Der neue Wert der Eigenschaft.</param>
    </member>
    <member name="T:System.Web.Http.OData.ODataActionParameters">
      <summary>ActionPayload enthält die Parameternamen und -werte, die von einem Client in einer POST-Anforderung zum Aufrufen einer bestimmten Aktion zur Verfügung gestellt werden. Die Parameterwerte werden in einem Wörterbuch gespeichert, das mithilfe des Parameternamens verschlüsselt wird.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataActionParameters.#ctor"></member>
    <member name="T:System.Web.Http.OData.ODataController">
      <summary>Definiert eine Basisklasse für OData-Controller, die das Schreiben und Lesen von Daten mithilfe der OData-Formate unterstützen.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataController.#ctor"></member>
    <member name="T:System.Web.Http.OData.ODataFormattingAttribute">
      <summary>     Ein Attribut, das für Controller festgelegt werden kann und die OData-Formatierer aktiviert.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataFormattingAttribute.#ctor"></member>
    <member name="M:System.Web.Http.OData.ODataFormattingAttribute.Initialize(System.Web.Http.Controllers.HttpControllerSettings,System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary>Ein Rückruf, der aufgerufen wird, um Außerkraftsetzungen pro Controller für diesen controllerDescriptor festzulegen.</summary>
      <param name="controllerSettings">Die zu initialisierenden Controllereinstellungen.</param>
      <param name="controllerDescriptor">Der Controllerdeskriptor. Beachten Sie, dass der <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> dem abgeleiteten Controllertyp zugeordnet werden kann, wenn <see cref="T:System.Web.Http.Controllers.IControllerConfiguration" /> vererbt wurde.</param>
    </member>
    <member name="T:System.Web.Http.OData.ODataMetadataController">
      <summary>Represents an <see cref="T:System.Web.Http.ApiController" /> for generating OData servicedoc and metadata document ($metadata).</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataMetadataController.#ctor"></member>
    <member name="M:System.Web.Http.OData.ODataMetadataController.GetMetadata">
      <summary>Generates the OData $metadata document.</summary>
      <returns>The <see cref="T:Microsoft.Data.Edm.IEdmModel" /> representing $metadata.</returns>
    </member>
    <member name="M:System.Web.Http.OData.ODataMetadataController.GetServiceDocument">
      <summary>Generates the OData service document.</summary>
      <returns>The service document for the service.</returns>
    </member>
    <member name="T:System.Web.Http.OData.ODataQueryContext">
      <summary>Definiert einige Kontextinformationen, die zum Ausführen der Abfragekomposition verwendet werden.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataQueryContext.#ctor(Microsoft.Data.Edm.IEdmModel,System.Type)">
      <summary>  Generiert eine Instanz von <see cref="T:System.Web.Http.OData.ODataQueryContext" /> mit <see cref="T:Microsoft.Data.Edm.IEdmModel" /> und dem CLR-Elementtyp.</summary>
      <param name="model">Das EdmModel, das den <see cref="T:Microsoft.Data.Edm.IEdmType" /> enthält, der dem angegebenen <paramref name="elementClrType" /> entspricht.</param>
      <param name="elementClrType">Der CLR-Typ des Elements der Auflistung, die abgefragt wird.</param>
    </member>
    <member name="P:System.Web.Http.OData.ODataQueryContext.ElementClrType">
      <summary>Ruft den CLR-Typ des Elements ab.</summary>
      <returns>Gibt <see cref="T:System.Type" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.ODataQueryContext.ElementType">
      <summary>   Ruft den <see cref="T:Microsoft.Data.Edm.IEdmType" /> des Elements ab.</summary>
      <returns>Gibt <see cref="T:Microsoft.Data.Edm.IEdmType" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.ODataQueryContext.Model">
      <summary>Ruft das angegebene <see cref="T:Microsoft.Data.Edm.IEdmModel" />-Objekt ab, das EntitySet enthält.</summary>
      <returns>Gibt <see cref="T:Microsoft.Data.Edm.IEdmModel" /> zurück.</returns>
    </member>
    <member name="T:System.Web.Http.OData.ODataQueryParameterBindingAttribute">
      <summary>A <see cref="T:System.Web.Http.ParameterBindingAttribute" /> to bind parameters of type <see cref="T:System.Web.Http.OData.Query.ODataQueryOptions" /> to the OData query from the incoming request.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataQueryParameterBindingAttribute.#ctor"></member>
    <member name="M:System.Web.Http.OData.ODataQueryParameterBindingAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)"></member>
    <member name="T:System.Web.Http.OData.ODataRoutingAttribute">
      <summary>Definiert ein Attribut auf Controllerebene, das zum Aktivieren der OData-Aktionsauswahl basierend auf Routingkonventionen verwendet werden kann.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataRoutingAttribute.#ctor"></member>
    <member name="M:System.Web.Http.OData.ODataRoutingAttribute.Initialize(System.Web.Http.Controllers.HttpControllerSettings,System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary>  Ein Rückruf, der aufgerufen wird, um Außerkraftsetzungen pro Controller für diesen controllerDescriptor festzulegen.</summary>
      <param name="controllerSettings">Die zu initialisierenden Controllereinstellungen.</param>
      <param name="controllerDescriptor">Der Controllerdeskriptor. Beachten Sie, dass der <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> dem abgeleiteten Controllertyp zugeordnet werden kann, wenn <see cref="T:System.Web.Http.Controllers.IControllerConfiguration" /> vererbt wurde.</param>
    </member>
    <member name="T:System.Web.Http.OData.PageResult">
      <summary>Represents a feed of entities that includes additional information that OData formats support.</summary>
    </member>
    <member name="M:System.Web.Http.OData.PageResult.#ctor(System.Uri,System.Nullable{System.Int64})">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.PageResult" /> class.</summary>
      <param name="nextPageLink">The link for the next page of items in the feed.</param>
      <param name="count">The total count of items in the feed.</param>
    </member>
    <member name="P:System.Web.Http.OData.PageResult.Count">
      <summary>Gets the total count of items in the feed.</summary>
      <returns>Returns <see cref="T:System.Int64" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.PageResult.NextPageLink">
      <summary>Gets the link for the next page of items in the feed.</summary>
      <returns>Returns <see cref="T:System.Uri" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.PageResult`1">
      <summary>PageResult ist ein Feed von Entitäten, die weitere Informationen enthalten, die OData-Formate unterstützen. Aktuell eingeschränkt auf die folgenden Angaben: die Anzahl aller übereinstimmenden Entitäten auf dem Server (mithilfe von $inlinecount=allpages angefordert) sowie den NextLink zum Abrufen der nächsten Seite mit Ergebnissen (wird hinzugefügt, wenn der Server servergesteuerte Auslagerung durchsetzt).</summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.PageResult`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Uri,System.Nullable{System.Int64})">
      <summary>Erstellt einen teilweisen Ergebnissatz – wird verwendet, wenn servergesteuerte Auslagerung aktiviert ist.</summary>
      <param name="items">Die Untermenge der übereinstimmenden Ergebnisse, die auf dieser Seite serialisiert werden sollen.</param>
      <param name="nextPageLink">Ein Link zur nächsten Seite mit übereinstimmenden Ergebnissen (wenn weitere Ergebnisse vorhanden sind).</param>
      <param name="count">Die Gesamtzahl der übereinstimmenden Ergebnisse, damit Clients über die Anzahl der Übereinstimmungen auf dem Server informiert sind.</param>
    </member>
    <member name="M:System.Web.Http.OData.PageResult`1.GetEnumerator">
      <returns>Gibt <see cref="T:System.Collections.Generic.IEnumerator`1" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.PageResult`1.Items">
      <returns>Gibt <see cref="T:System.Collections.Generic.IEnumerable`1" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.OData.PageResult`1.System#Collections#IEnumerable#GetEnumerator">
      <returns>Gibt <see cref="T:System.Collections.IEnumerator" /> zurück.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ActionConfiguration">
      <summary>ActionConfiguration stellt eine OData-Aktion dar, die Sie über Ihren Dienst bereitstellen möchten.   ActionConfigurations werden über $metadata als ein &lt;FunctionImport /&gt;-Element bereitgestellt.   </summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.AddParameter(System.String,System.Web.Http.OData.Builder.IEdmTypeConfiguration)">
      <summary> Fügt einen neuen nicht bindenden Parameter hinzu. </summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ActionConfiguration.BindingParameter">
      <summary> Ruft den bindingParameter ab.   Null bedeutet, dass die Aktion keinen bindingParameter besitzt.  </summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.CollectionParameter``1(System.String)">
      <summary> Fügt einen neuen nicht bindenden Auflistungsparameter hinzu. </summary>
      <typeparam name="TElementType"></typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ActionConfiguration.FollowsConventions"></member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.GetActionLink">
      <summary> Ruft die aktuell registrierte Aktionslinkfactory ab. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.HasActionLink(System.Func{System.Web.Http.OData.EntityInstanceContext,System.Uri},System.Boolean)"></member>
    <member name="P:System.Web.Http.OData.Builder.ActionConfiguration.IsAlwaysBindable">
      <summary> Gibt an, ob diese Aktion immer gebunden werden kann. Angenommen, eine Watch-Aktion kann an ein Movie-Objekt gebunden werden: Ggf. ist es nicht immer möglich, einen Film anzusehen. In diesem Fall gibt IsAlwaysBindable den Wert false zurück. </summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ActionConfiguration.IsBindable"></member>
    <member name="P:System.Web.Http.OData.Builder.ActionConfiguration.Kind"></member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.Parameter``1(System.String)">
      <summary> Fügt einen neuen nicht bindenden Parameter hinzu. </summary>
      <typeparam name="TParameter"></typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ActionConfiguration.Parameters"></member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.Returns``1">
      <summary> Richtet den Rückgabetyp der Aktion ein.  Wird verwendet, wenn der Rückgabetyp ein einzelner primitiver oder ein ComplexType ist.  </summary>
      <typeparam name="TReturnType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.ReturnsCollection``1">
      <summary> Richtet den Rückgabetyp der Aktion ein. Wird verwendet, wenn der Rückgabetyp eine Auflistung von primitiven oder ComplexTypes ist.  </summary>
      <typeparam name="TReturnElementType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.ReturnsCollectionFromEntitySet``1(System.String)">
      <summary> Legt den Rückgabetyp auf eine Auflistung von EntityType-Instanzen fest. </summary>
      <param name="entitySetName">Der entitySetName, der die zurückgegebenen EntityType-Instanzen enthält.</param>
      <typeparam name="TElementEntityType">Der Typ, der ein EntityType ist.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.ReturnsFromEntitySet``1(System.String)">
      <summary> Legt den Rückgabetyp auf eine einzelne EntityType-Instanz fest. </summary>
      <param name="entitySetName">Der entitySetName, der die EntityType-Rückgabeinstanz enthält.</param>
      <typeparam name="TEntityType">Der Typ, der ein EntityType ist.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.SetBindingParameter(System.String,System.Web.Http.OData.Builder.IEdmTypeConfiguration,System.Boolean)">
      <summary> Gibt den Namen von bindingParameter, den Typ und die Eigenschaft alwaysBindable an und darf nur verwendet werden, wenn die Aktion isBindable ist. </summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ActionLinkBuilder">
      <summary> Mithilfe von ActionLinkBuilder kann eine Aktion mit Anmerkungen versehen werden.  Auf diese Weise erstellen Formatierer Links zum Aufrufen gebundener Aktionen. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionLinkBuilder.#ctor(System.Func{System.Web.Http.OData.EntityInstanceContext,System.Uri},System.Boolean)"></member>
    <member name="M:System.Web.Http.OData.Builder.ActionLinkBuilder.BuildActionLink(System.Web.Http.OData.EntityInstanceContext)"></member>
    <member name="M:System.Web.Http.OData.Builder.ActionLinkBuilder.CreateActionLinkFactory(System.Func{System.Web.Http.OData.EntityInstanceContext,System.Uri},System.Func{System.Web.Http.OData.EntityInstanceContext,System.Boolean})">
      <summary> Erstellt eine Aktionslinkfactory, die einen Aktionslink erstellt. Dies geschieht jedoch nur bei Eignung basierend auf expensiveAvailabilityCheck und wenn aufwendige Überprüfungen ausgeführt werden sollen. Dies wird anhand der Eigenschaft EntityInstanceContext.SkipExpensiveActionAvailabilityChecks abgeleitet. </summary>
      <returns>Die neue Aktionslinkfactory.</returns>
      <param name="baseFactory">Die Aktionslinkfactory, die tatsächlich Links erstellt, wenn alle Überprüfungen erfolgreich waren.</param>
      <param name="expensiveAvailabilityCheck">Die Verfügbarkeitsüberprüfungsfunktion, die aufwendig ist, bei deren Aufruf jedoch zurückgegeben wird, ob die Aktion verfügbar ist.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ActionLinkBuilder.FollowsConventions"></member>
    <member name="T:System.Web.Http.OData.Builder.BindingParameterConfiguration">
      <summary> Stellt einen BindingParameter dar.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.BindingParameterConfiguration.#ctor(System.String,System.Web.Http.OData.Builder.IEdmTypeConfiguration,System.Boolean)">
      <summary> Erstellen einer "BindingParameterConfiguration" </summary>
      <param name="name">Der Name des Bindungsparameters.</param>
      <param name="parameterType">Der Typ des Bindungsparameters.</param>
      <param name="alwaysBindable">Gibt an, ob die Aktion immer an Instanzen des Bindungsparameters gebunden werden kann.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.BindingParameterConfiguration.AlwaysBindable">
      <summary> Gibt an, ob BindingParameter immer gebunden werden kann. Einige Aktionen sind z. B. immer verfügbar, andere nur zu bestimmten Zeiten oder bei bestimmten Zuständen. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Builder.BindingParameterConfiguration.DefaultBindingParameterName"></member>
    <member name="T:System.Web.Http.OData.Builder.CollectionPropertyConfiguration">
      <summary>CollectionPropertyConfiguration stellt eine CollectionProperty für einen EntityType oder einen ComplexType dar.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.CollectionPropertyConfiguration.#ctor(System.Reflection.PropertyInfo,System.Web.Http.OData.Builder.StructuralTypeConfiguration)">
      <summary>Erstellt eine CollectionPropertyConfiguration mithilfe der bereitgestellten <paramref name="property" />.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionPropertyConfiguration.ElementType">
      <summary>Gibt den Typ der Elemente in der Auflistung zurück.</summary>
      <returns>Gibt <see cref="T:System.Type" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.CollectionPropertyConfiguration.IsOptional">
      <summary>Legt die CollectionProperty als optional (Nullwerte zulassend) fest.</summary>
      <returns>Gibt <see cref="T:System.Web.Http.OData.Builder.CollectionPropertyConfiguration" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.CollectionPropertyConfiguration.IsRequired">
      <summary>Legt die CollectionProperty als erforderlich (keine Nullwerte zulassend) fest.</summary>
      <returns>Gibt <see cref="T:System.Web.Http.OData.Builder.CollectionPropertyConfiguration" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionPropertyConfiguration.Kind">
      <returns>Gibt <see cref="T:System.Web.Http.OData.Builder.PropertyKind" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionPropertyConfiguration.RelatedClrType">
      <returns>Gibt <see cref="T:System.Type" /> zurück.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Builder.CollectionTypeConfiguration">
      <summary>Stellt eine Auflistung eines benannten Typs dar, z. B. Collection(Namespace.Customer) oder Collection(Namespace.Address).</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.CollectionTypeConfiguration.#ctor(System.Web.Http.OData.Builder.IEdmTypeConfiguration,System.Type)">
      <summary>Generiert eine Auflistung, die Elemente vom angegebenen ElementType enthält und in .NET mithilfe des angegebenen clrTypes dargestellt wird.</summary>
      <param name="elementType">Die EdmTypeConfiguration der Elemente in der Auflistung.</param>
      <param name="clrType">Der Typ dieser Auflistung bei ihrer Manifestation in .NET.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionTypeConfiguration.ClrType">
      <returns>Gibt <see cref="T:System.Type" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionTypeConfiguration.ElementType">
      <summary>Die EdmTypeConfiguration der Elemente in dieser Auflistung.</summary>
      <returns>Gibt <see cref="T:System.Web.Http.OData.Builder.IEdmTypeConfiguration" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionTypeConfiguration.FullName">
      <returns>Gibt <see cref="T:System.String" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionTypeConfiguration.Kind">
      <returns>Gibt <see cref="T:Microsoft.Data.Edm.EdmTypeKind" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionTypeConfiguration.ModelBuilder">
      <returns>Gibt <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionTypeConfiguration.Name">
      <returns>Gibt <see cref="T:System.String" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionTypeConfiguration.Namespace">
      <returns>Gibt <see cref="T:System.String" /> zurück.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ComplexPropertyConfiguration"></member>
    <member name="M:System.Web.Http.OData.Builder.ComplexPropertyConfiguration.#ctor(System.Reflection.PropertyInfo,System.Web.Http.OData.Builder.StructuralTypeConfiguration)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.OData.Builder.ComplexPropertyConfiguration" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ComplexPropertyConfiguration.IsOptional"></member>
    <member name="M:System.Web.Http.OData.Builder.ComplexPropertyConfiguration.IsRequired"></member>
    <member name="P:System.Web.Http.OData.Builder.ComplexPropertyConfiguration.Kind"></member>
    <member name="P:System.Web.Http.OData.Builder.ComplexPropertyConfiguration.RelatedClrType"></member>
    <member name="T:System.Web.Http.OData.Builder.ComplexTypeConfiguration">
      <summary>Ermöglicht das Ausführen der Konfiguration für einen komplexen Typ in einem Modell. Eine ComplexTypeConfiguration kann mithilfe der Methode <see cref="M:System.Web.Http.OData.Builder.ODataModelBuilder.ComplexType``1" /> abgerufen werden.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ComplexTypeConfiguration.#ctor"></member>
    <member name="M:System.Web.Http.OData.Builder.ComplexTypeConfiguration.#ctor(System.Web.Http.OData.Builder.ODataModelBuilder,System.Type)"></member>
    <member name="P:System.Web.Http.OData.Builder.ComplexTypeConfiguration.Kind"></member>
    <member name="T:System.Web.Http.OData.Builder.ComplexTypeConfiguration`1">
      <summary>Represents an <see cref="T:Microsoft.Data.Edm.IEdmComplexType" /> that can be built using <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</summary>
      <typeparam name="TComplexType"></typeparam>
    </member>
    <member name="T:System.Web.Http.OData.Builder.EntityCollectionConfiguration`1">
      <summary>EntityCollectionConfiguration stellt eine Auflistung von Entitäten dar. Diese Klasse kann zum Konfigurieren von Elementen verwendet werden, die an Entitäten gebunden werden, z. B. für Aktionen, die an eine Auflistung gebunden werden.</summary>
      <typeparam name="TEntityType">Der EntityType, der der ElementType der EntityCollection ist.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityCollectionConfiguration`1.Action(System.String)">
      <summary>Erstellt eine neue Aktion, die an Collection(EntityType) gebunden wird.</summary>
      <returns>Eine ActionConfiguration, die die weitere Konfiguration der Aktion ermöglicht.</returns>
      <param name="name">Der Name der Aktion.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityCollectionConfiguration`1.TransientAction(System.String)">
      <summary>Erstellt eine neue Aktion, die manchmal an Collection(EntityType) gebunden wird.</summary>
      <returns>Eine ActionConfiguration, die die weitere Konfiguration der Aktion ermöglicht.</returns>
      <param name="name">Der Name der Aktion.</param>
    </member>
    <member name="T:System.Web.Http.OData.Builder.EntitySetConfiguration">
      <summary>Ermöglicht das Ausführen der Konfiguration für eine Entitätssammlung in einem Modell. Eine <see cref="T:System.Web.Http.OData.Builder.EntitySetConfiguration" /> kann mithilfe der Methode <see cref="M:System.Web.Http.OData.Builder.ODataModelBuilder.EntitySet``1(System.String)" /> abgerufen werden.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.#ctor"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.#ctor(System.Web.Http.OData.Builder.ODataModelBuilder,System.Type,System.String)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.#ctor(System.Web.Http.OData.Builder.ODataModelBuilder,System.Web.Http.OData.Builder.EntityTypeConfiguration,System.String)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.AddBinding(System.Web.Http.OData.Builder.NavigationPropertyConfiguration,System.Web.Http.OData.Builder.EntitySetConfiguration)">
      <summary>Bindet die angegebene Navigationseigenschaft an die Zielentitätssammlung.</summary>
      <returns>Die <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyBinding" />, mit der die Eigenschaft weiter konfiguriert werden kann.</returns>
      <param name="navigationConfiguration">Die Navigationseigenschaft.</param>
      <param name="targetEntitySet">Die Zielentitätssammlung.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntitySetConfiguration.Bindings">
      <summary>Ruft die Navigationsziele dieser Entitätssammlung ab.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntitySetConfiguration.ClrType">
      <summary>Ruft den unterstützenden CLR-Typ für den in dieser Entitätssammlung enthaltenen Entitätstyp ab.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntitySetConfiguration.EntityType">
      <summary>Ruft den in dieser Entitätssammlung enthaltenen Entitätstyp ab.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.FindBinding(System.String)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.FindBinding(System.Web.Http.OData.Builder.NavigationPropertyConfiguration)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.FindBinding(System.Web.Http.OData.Builder.NavigationPropertyConfiguration,System.Boolean)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.GetEditLink">
      <summary>Ruft den Generator ab, der zum Generieren von Bearbeitungslinks für Einträge aus dieser Entitätssammlung verwendet wird.</summary>
      <returns>Der Linkgenerator.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.GetFeedSelfLink">
      <summary>Ruft den Generator ab, der zum Generieren von Self-Links für Feeds für diese Entitätssammlung verwendet wird.</summary>
      <returns>Der Linkgenerator.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.GetIdLink">
      <summary>Ruft den Generator ab, der zum Generieren der ID für Einträge aus dieser Entitätssammlung verwendet wird.</summary>
      <returns>Der Generator.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.GetNavigationPropertyLink(System.Web.Http.OData.Builder.NavigationPropertyConfiguration)">
      <summary>Ruft den Generator ab, der zum Generieren von Navigationslinks für die angegebene Navigationseigenschaft für Einträge aus dieser Entitätssammlung verwendet wird.</summary>
      <returns>Der Linkgenerator.</returns>
      <param name="navigationProperty">Die Navigationseigenschaft.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.GetReadLink">
      <summary>Ruft den Generator ab, der zum Generieren von Leselinks für Einträge aus dieser Entitätssammlung verwendet wird.</summary>
      <returns>Der Linkgenerator.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.GetUrl"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasEditLink(System.Web.Http.OData.Builder.SelfLinkBuilder{System.Uri})"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasFeedSelfLink(System.Func{System.Web.Http.OData.FeedContext,System.Uri})">
      <summary>Fügt dem Feed einen Self-Link hinzu.</summary>
      <returns>Die Entitätssammlungskonfiguration, die zurzeit konfiguriert wird.</returns>
      <param name="feedSelfLinkFactory">Der Generator, der zum Generieren der Link-URL verwendet wird.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasIdLink(System.Web.Http.OData.Builder.SelfLinkBuilder{System.String})"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasNavigationPropertiesLink(System.Collections.Generic.IEnumerable{System.Web.Http.OData.Builder.NavigationPropertyConfiguration},System.Web.Http.OData.Builder.NavigationLinkBuilder)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasNavigationPropertyLink(System.Web.Http.OData.Builder.NavigationPropertyConfiguration,System.Web.Http.OData.Builder.NavigationLinkBuilder)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasReadLink(System.Web.Http.OData.Builder.SelfLinkBuilder{System.Uri})"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasUrl(System.String)">
      <summary>Konfiguriert die Entitätssammlungs-URL.</summary>
      <returns>Gibt sich selbst zurück, damit mehrere Aufrufe verkettet werden können.</returns>
      <param name="url">Die Entitätssammlungs-URL.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntitySetConfiguration.Name">
      <summary>Ruft den Namen dieser Entitätssammlung ab.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.RemoveBinding(System.Web.Http.OData.Builder.NavigationPropertyConfiguration)">
      <summary>Entfernt die Bindung für die angegebene Navigationseigenschaft.</summary>
      <param name="navigationConfiguration">Die Navigationseigenschaft.</param>
    </member>
    <member name="T:System.Web.Http.OData.Builder.EntitySetConfiguration`1">
      <typeparam name="TEntityType"></typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntitySetConfiguration`1.EntityType"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.FindBinding(System.String)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.FindBinding(System.Web.Http.OData.Builder.NavigationPropertyConfiguration)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.FindBinding(System.Web.Http.OData.Builder.NavigationPropertyConfiguration,System.Boolean)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasEditLink(System.Func{System.Web.Http.OData.EntityInstanceContext{`0},System.String},System.Boolean)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasEditLink(System.Func{System.Web.Http.OData.EntityInstanceContext{`0},System.Uri},System.Boolean)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasFeedSelfLink(System.Func{System.Web.Http.OData.FeedContext,System.String})">
      <summary> Fügt dem Feed einen Self-Link hinzu. </summary>
      <param name="feedSelfLinkFactory">Der Generator, der zum Generieren der Link-URL verwendet wird.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasFeedSelfLink(System.Func{System.Web.Http.OData.FeedContext,System.Uri})">
      <summary> Fügt dem Feed einen Self-Link hinzu. </summary>
      <param name="feedSelfLinkFactory">Der Generator, der zum Generieren der Link-URL verwendet wird.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasIdLink(System.Func{System.Web.Http.OData.EntityInstanceContext{`0},System.String},System.Boolean)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasManyBinding``2(System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0}}},System.String)">
      <typeparam name="TTargetType"></typeparam>
      <typeparam name="TDerivedEntityType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasManyBinding``2(System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0}}},System.Web.Http.OData.Builder.EntitySetConfiguration{``0})">
      <typeparam name="TTargetType"></typeparam>
      <typeparam name="TDerivedEntityType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasManyBinding``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.String)">
      <typeparam name="TTargetType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasManyBinding``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Web.Http.OData.Builder.EntitySetConfiguration{``0})">
      <typeparam name="TTargetType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasNavigationPropertiesLink(System.Collections.Generic.IEnumerable{System.Web.Http.OData.Builder.NavigationPropertyConfiguration},System.Func{System.Web.Http.OData.EntityInstanceContext{`0},Microsoft.Data.Edm.IEdmNavigationProperty,System.Uri},System.Boolean)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasNavigationPropertyLink(System.Web.Http.OData.Builder.NavigationPropertyConfiguration,System.Func{System.Web.Http.OData.EntityInstanceContext{`0},Microsoft.Data.Edm.IEdmNavigationProperty,System.Uri},System.Boolean)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasOptionalBinding``2(System.Linq.Expressions.Expression{System.Func{``1,``0}},System.String)">
      <typeparam name="TTargetType"></typeparam>
      <typeparam name="TDerivedEntityType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasOptionalBinding``2(System.Linq.Expressions.Expression{System.Func{``1,``0}},System.Web.Http.OData.Builder.EntitySetConfiguration{``0})">
      <typeparam name="TTargetType"></typeparam>
      <typeparam name="TDerivedEntityType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasOptionalBinding``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
      <typeparam name="TTargetType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasOptionalBinding``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Web.Http.OData.Builder.EntitySetConfiguration{``0})">
      <typeparam name="TTargetType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasReadLink(System.Func{System.Web.Http.OData.EntityInstanceContext{`0},System.String},System.Boolean)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasReadLink(System.Func{System.Web.Http.OData.EntityInstanceContext{`0},System.Uri},System.Boolean)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasRequiredBinding``2(System.Linq.Expressions.Expression{System.Func{``1,``0}},System.String)">
      <typeparam name="TTargetType"></typeparam>
      <typeparam name="TDerivedEntityType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasRequiredBinding``2(System.Linq.Expressions.Expression{System.Func{``1,``0}},System.Web.Http.OData.Builder.EntitySetConfiguration{``0})">
      <typeparam name="TTargetType"></typeparam>
      <typeparam name="TDerivedEntityType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasRequiredBinding``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
      <typeparam name="TTargetType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasRequiredBinding``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Web.Http.OData.Builder.EntitySetConfiguration{``0})">
      <typeparam name="TTargetType"></typeparam>
    </member>
    <member name="T:System.Web.Http.OData.Builder.EntityTypeConfiguration">
      <summary>Stellt einen <see cref="T:Microsoft.Data.Edm.IEdmEntityType" /> dar, der mithilfe von <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" /> erstellt werden kann.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.#ctor"></member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.#ctor(System.Web.Http.OData.Builder.ODataModelBuilder,System.Type)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.Abstract">
      <summary>Markiert diesen Entitätstyp als abstrakt.</summary>
      <returns>Gibt sich selbst zurück, damit mehrere Aufrufe verkettet werden können.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.AddCollectionProperty(System.Reflection.PropertyInfo)">
      <summary>Fügt diesem Entitätstyp eine neue EDM-Auflistungseigenschaft hinzu.</summary>
      <returns>Gibt <see cref="T:System.Web.Http.OData.Builder.CollectionPropertyConfiguration" /> der hinzugefügten Eigenschaft zurück.</returns>
      <param name="propertyInfo">Die unterstützende CLR-Eigenschaft.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.AddComplexProperty(System.Reflection.PropertyInfo)">
      <summary>Fügt diesem Entitätstyp eine neue komplexe EDM-Eigenschaft hinzu.</summary>
      <returns>Gibt <see cref="T:System.Web.Http.OData.Builder.ComplexPropertyConfiguration" /> der hinzugefügten Eigenschaft zurück.</returns>
      <param name="propertyInfo">Die unterstützende CLR-Eigenschaft.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.AddNavigationProperty(System.Reflection.PropertyInfo,Microsoft.Data.Edm.EdmMultiplicity)">
      <summary>Fügt diesem Entitätstyp eine neue EDM-Navigationseigenschaft hinzu.</summary>
      <returns>Gibt <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyConfiguration" /> der hinzugefügten Eigenschaft zurück.</returns>
      <param name="navigationProperty">Die unterstützende CLR-Eigenschaft.</param>
      <param name="multiplicity">Das <see cref="T:Microsoft.Data.Edm.EdmMultiplicity" />-Objekt der Navigationseigenschaft.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.AddProperty(System.Reflection.PropertyInfo)">
      <summary>Fügt diesem Entitätstyp eine neue primitive EDM-Eigenschaft hinzu.</summary>
      <returns>Gibt <see cref="T:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration" /> der hinzugefügten Eigenschaft zurück.</returns>
      <param name="propertyInfo">Die unterstützende CLR-Eigenschaft.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration.BaseType">
      <summary>Ruft den Basistyp dieses Entitätstyps ab oder legt ihn fest.</summary>
      <returns>Gibt <see cref="T:System.Web.Http.OData.Builder.EntityTypeConfiguration" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration.BaseTypeConfigured">
      <returns>Gibt <see cref="T:System.Boolean" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.DerivesFrom(System.Web.Http.OData.Builder.EntityTypeConfiguration)">
      <summary>Legt den Basistyp dieses Entitätstyps fest.</summary>
      <returns>Gibt sich selbst zurück, damit mehrere Aufrufe verkettet werden können.</returns>
      <param name="baseType">Der Basisentitätstyp.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.DerivesFromNothing">
      <summary>Legt den Basistyp dieses Entitätstyps auf null fest. Dies bedeutet, dass dieser Entitätstyp nicht abgeleitet ist.</summary>
      <returns>Gibt sich selbst zurück, damit mehrere Aufrufe verkettet werden können.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.HasKey(System.Reflection.PropertyInfo)">
      <summary>Konfiguriert die Schlüsseleigenschaften für diesen Entitätstyp.</summary>
      <returns>Gibt sich selbst zurück, damit mehrere Aufrufe verkettet werden können.</returns>
      <param name="keyProperty">Die Eigenschaft, die den Schlüsseleigenschaften dieses Entitätstyps hinzugefügt werden soll.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration.IsAbstract">
      <summary>Ruft einen Wert ab, der angibt, ob dieser Typ abstrakt ist, oder legt ihn fest.</summary>
      <returns>Gibt <see cref="T:System.Boolean" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration.Keys">
      <summary>Ruft die Auflistung der Schlüssel für diesen Entitätstyp ab.</summary>
      <returns>Gibt <see cref="T:System.Collections.Generic.IEnumerable`1" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration.Kind">
      <summary>Ruft das <see cref="T:Microsoft.Data.Edm.EdmTypeKind" />-Objekt dieser <see cref="T:System.Web.Http.OData.Builder.IEdmTypeConfiguration" /> ab.</summary>
      <returns>Gibt <see cref="T:Microsoft.Data.Edm.EdmTypeKind" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration.NavigationProperties">
      <summary>Ruft die Auflistung von <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyConfiguration" /> dieses Entitätstyps ab.</summary>
      <returns>Gibt <see cref="T:System.Collections.Generic.IEnumerable`1" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.RemoveKey(System.Web.Http.OData.Builder.PrimitivePropertyConfiguration)">
      <summary>Entfernt die Eigenschaft aus der Auflistung der Entitätsschlüssel.</summary>
      <param name="keyProperty">Der zu entfernende Schlüssel.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.RemoveProperty(System.Reflection.PropertyInfo)"></member>
    <member name="T:System.Web.Http.OData.Builder.EntityTypeConfiguration`1">
      <summary>Stellt einen <see cref="T:Microsoft.Data.Edm.IEdmEntityType" /> dar, der mithilfe von <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" /> erstellt werden kann.</summary>
      <typeparam name="TEntityType">Der unterstützende CLR-Typ für diesen <see cref="T:Microsoft.Data.Edm.IEdmEntityType" />.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.Abstract">
      <summary>Markiert diesen Entitätstyp als abstrakt.</summary>
      <returns>Gibt sich selbst zurück, damit mehrere Aufrufe verkettet werden können.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.Action(System.String)">
      <summary>Erstellt eine Aktion, die an diesen EntityType gebunden wird.</summary>
      <returns>Die ActionConfiguration, die weitere Konfiguration der neuen Aktion ermöglicht.</returns>
      <param name="name">Der Name der Aktion.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.BaseType">
      <summary>Ruft den Basistyp dieses Entitätstyps ab.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.Collection">
      <summary>Wird für den Zugriff auf eine Auflistung von Entitäten verwendet, über die Aktionen konfiguriert werden können, die an EntityCollections gebunden werden können.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.DerivesFrom``1">
      <summary>Legt den Basistyp dieses Entitätstyps fest.</summary>
      <returns>Gibt sich selbst zurück, damit mehrere Aufrufe verkettet werden können.</returns>
      <typeparam name="TBaseType">Der Basisentitätstyp.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.DerivesFromNothing">
      <summary>Legt den Basistyp dieses Entitätstyps auf null fest. Dies bedeutet, dass dieser Entitätstyp nicht abgeleitet ist.</summary>
      <returns>Gibt sich selbst zurück, damit mehrere Aufrufe verkettet werden können.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.HasKey``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Konfiguriert die Schlüsseleigenschaften für diesen Entitätstyp.</summary>
      <returns>Gibt sich selbst zurück, damit mehrere Aufrufe verkettet werden können.</returns>
      <param name="keyDefinitionExpression">Ein Lambda-Ausdruck, der die Eigenschaft darstellt, die als primärer Schlüssel verwendet werden soll. In C# beispielsweise t =&amp;gt; t.Id und in Visual Basic .Net Function(t) t.Id.</param>
      <typeparam name="TKey">Der Typ des Schlüssels.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.HasMany``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})">
      <summary>Konfiguriert eine 1:n-Beziehung aus diesem Entitätstyp.</summary>
      <returns>Ein Konfigurationsobjekt, das zum weiteren Konfigurieren der Beziehung verwendet werden kann.</returns>
      <param name="navigationPropertyExpression">Ein Lambda-Ausdruck, der die Navigationseigenschaft für die Beziehung darstellt. In C# beispielsweise t =&amp;gt; t.MyProperty und in Visual Basic .Net Function(t) t.MyProperty.</param>
      <typeparam name="TTargetEntity">Der Entitätstyp am anderen Ende der Beziehung.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.HasOptional``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Konfiguriert eine optionale Beziehung aus diesem Entitätstyp.</summary>
      <returns>Ein Konfigurationsobjekt, das zum weiteren Konfigurieren der Beziehung verwendet werden kann.</returns>
      <param name="navigationPropertyExpression">Ein Lambda-Ausdruck, der die Navigationseigenschaft für die Beziehung darstellt. In C# beispielsweise t =&amp;gt; t.MyProperty und in Visual Basic .Net Function(t) t.MyProperty.</param>
      <typeparam name="TTargetEntity">Der Entitätstyp am anderen Ende der Beziehung.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.HasRequired``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Konfiguriert eine erforderliche Beziehung aus diesem Entitätstyp.</summary>
      <returns>Ein Konfigurationsobjekt, das zum weiteren Konfigurieren der Beziehung verwendet werden kann.</returns>
      <param name="navigationPropertyExpression">Ein Lambda-Ausdruck, der die Navigationseigenschaft für die Beziehung darstellt. In C# beispielsweise t =&amp;gt; t.MyProperty und in Visual Basic .Net Function(t) t.MyProperty.</param>
      <typeparam name="TTargetEntity">Der Entitätstyp am anderen Ende der Beziehung.</typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.NavigationProperties">
      <summary>Ruft die Auflistung von <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyConfiguration" /> dieses Entitätstyps ab.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.TransientAction(System.String)">
      <summary>Erstellt eine Aktion, die manchmal an diesen EntityType gebunden wird.</summary>
      <returns>Die ActionConfiguration, die weitere Konfiguration der neuen "vorübergehenden" Aktion ermöglicht.</returns>
      <param name="name">Der Name der Aktion.</param>
    </member>
    <member name="T:System.Web.Http.OData.Builder.IEdmTypeConfiguration">
      <summary>Stellt einen EdmType dar.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.IEdmTypeConfiguration.ClrType">
      <summary>Ruft den dem EdmType zugeordneten .NET-Typ ab.</summary>
      <returns>Gibt <see cref="T:System.Type" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.IEdmTypeConfiguration.FullName">
      <summary>Der vollständige Name (einschließlich Namespace) von EdmType.</summary>
      <returns>Gibt <see cref="T:System.String" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.IEdmTypeConfiguration.Kind">
      <summary>Die Art von EdmType. Beispiele sind EntityType, ComplexType, PrimitiveType, CollectionType.</summary>
      <returns>Gibt <see cref="T:Microsoft.Data.Edm.EdmTypeKind" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.IEdmTypeConfiguration.ModelBuilder">
      <summary>Der ODataModelBuilder, der zum Erstellen dieses IEdmType-Objekts verwendet wird.</summary>
      <returns>Gibt <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.IEdmTypeConfiguration.Name">
      <summary>Der Name des EdmType-Objekts.</summary>
      <returns>Gibt <see cref="T:System.String" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.IEdmTypeConfiguration.Namespace">
      <summary>Der Namespace des EdmType-Objekts.</summary>
      <returns>Gibt <see cref="T:System.String" /> zurück.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Builder.NavigationLinkBuilder"></member>
    <member name="M:System.Web.Http.OData.Builder.NavigationLinkBuilder.#ctor(System.Func{System.Web.Http.OData.EntityInstanceContext,Microsoft.Data.Edm.IEdmNavigationProperty,System.Uri},System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.OData.Builder.NavigationLinkBuilder" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.NavigationLinkBuilder.Factory"></member>
    <member name="P:System.Web.Http.OData.Builder.NavigationLinkBuilder.FollowsConventions"></member>
    <member name="T:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration">
      <summary>Used to configure the binding for a navigation property for an entity set. This configuration functionality is exposed by the model builder Fluent API, see <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration.#ctor(System.Web.Http.OData.Builder.NavigationPropertyConfiguration,System.Web.Http.OData.Builder.EntitySetConfiguration)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration" /> class.</summary>
      <param name="navigationProperty">The navigation property for the binding.</param>
      <param name="entitySet">The target entity set of the binding.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration.EntitySet">
      <summary>Gets the target entity set of the binding.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration.NavigationProperty">
      <summary>Gets the navigation property of the binding.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.NavigationPropertyConfiguration"></member>
    <member name="M:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.#ctor(System.Reflection.PropertyInfo,Microsoft.Data.Edm.EdmMultiplicity,System.Web.Http.OData.Builder.EntityTypeConfiguration)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyConfiguration" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.DeclaringEntityType"></member>
    <member name="P:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.Kind"></member>
    <member name="P:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.Multiplicity"></member>
    <member name="M:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.Optional"></member>
    <member name="P:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.RelatedClrType"></member>
    <member name="M:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.Required"></member>
    <member name="T:System.Web.Http.OData.Builder.NonbindingParameterConfiguration">
      <summary> Stellt einen nicht bindenden Prozedurparameter dar.   Nicht bindende Parameter werden im POST-Nachrichtentext für Aktionen bereitgestellt. Nicht bindende Parameter werden auf drei verschiedene Arten für Funktionen bereitgestellt: ~/.../Function(p1=value), ~/.../Function(p1=@x)?@x=value, ~/.../Function?p1=value (nur zulässig, wenn die Funktion das letzte URL-Pfadsegment ist).   </summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.NonbindingParameterConfiguration.#ctor(System.String,System.Web.Http.OData.Builder.IEdmTypeConfiguration)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.OData.Builder.NonbindingParameterConfiguration" />-Klasse.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ODataConventionModelBuilder">
      <summary>Wird verwendet, um CLR-Klassen einem EDM-Modell automatisch basierend auf einer Sammlung von <see cref="T:System.Web.Http.OData.Builder.Conventions.IConvention" />-Objekten zuzuordnen.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.#ctor">
      <summary>Initialisiert einen neuen <see cref="T:System.Web.Http.OData.Builder.ODataConventionModelBuilder" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.#ctor(System.Web.Http.HttpConfiguration)">
      <summary>Initialisiert einen neuen <see cref="T:System.Web.Http.OData.Builder.ODataConventionModelBuilder" />.</summary>
      <param name="configuration">Der zu verwendende <see cref="T:System.Web.Http.HttpConfiguration" />.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.AddComplexType(System.Type)">
      <returns>Gibt <see cref="T:System.Web.Http.OData.Builder.ComplexTypeConfiguration" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.AddEntity(System.Type)">
      <returns>Gibt <see cref="T:System.Web.Http.OData.Builder.EntityTypeConfiguration" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.AddEntitySet(System.String,System.Web.Http.OData.Builder.EntityTypeConfiguration)">
      <returns>Gibt <see cref="T:System.Web.Http.OData.Builder.EntitySetConfiguration" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.GetEdmModel">
      <returns>Gibt <see cref="T:Microsoft.Data.Edm.IEdmModel" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.Ignore``1">
      <returns>Gibt <see cref="T:System.Web.Http.OData.Builder.ODataConventionModelBuilder" /> zurück.</returns>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.Ignore(System.Type[])">
      <returns>Gibt <see cref="T:System.Web.Http.OData.Builder.ODataConventionModelBuilder" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataConventionModelBuilder.OnModelCreating">
      <summary>Diese Aktion wird aufgerufen, nachdem <see cref="T:System.Web.Http.OData.Builder.ODataConventionModelBuilder" /> alle Konventionen ausgeführt hat und bevor die Konfiguration gesperrt und zum Erstellen von <see cref="T:Microsoft.Data.Edm.IEdmModel" /> verwendet wird.</summary>
      <returns>Gibt <see cref="T:System.Action`1" /> zurück.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ODataModelBuilder">
      <summary>Ordnet CLR-Klassen einem EDM-Modell zu.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.#ctor"></member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.Action(System.String)">
      <summary>Fügt dem Generator eine Aktion hinzu, die nicht gebunden werden kann.</summary>
      <returns>Das Konfigurationsobjekt für die angegebene Aktion.</returns>
      <param name="name">Der Name der Aktion.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.AddComplexType(System.Type)">
      <summary>Registriert einen komplexen Typ als Teil des Modells und gibt ein Objekt zurück, das zum Konfigurieren der Entität verwendet werden kann. Diese Methode kann mehrmals für die gleiche Entität aufgerufen werden, um mehrere Konfigurationszeilen auszuführen.</summary>
      <returns>Das Konfigurationsobjekt für den angegebenen komplexen Typ.</returns>
      <param name="type">Der Typ, der registriert oder konfiguriert werden soll.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.AddEntity(System.Type)">
      <summary>Registriert einen Entitätstyp als Teil des Modells und gibt ein Objekt zurück, das zum Konfigurieren der Entität verwendet werden kann. Diese Methode kann mehrmals für die gleiche Entität aufgerufen werden, um mehrere Konfigurationszeilen auszuführen.</summary>
      <returns>Das Konfigurationsobjekt für den angegebenen Entitätstyp.</returns>
      <param name="type">Der Typ, der registriert oder konfiguriert werden soll.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.AddEntitySet(System.String,System.Web.Http.OData.Builder.EntityTypeConfiguration)">
      <summary>Registriert eine Entitätssammlung als Teil des Modells und gibt ein Objekt zurück, das zum Konfigurieren der Entitätssammlung verwendet werden kann. Diese Methode kann mehrmals für den gleichen Typ aufgerufen werden, um mehrere Konfigurationszeilen auszuführen.</summary>
      <returns>Das Konfigurationsobjekt für die angegebene Entitätssammlung.</returns>
      <param name="name">Der Name der Entitätssammlung.</param>
      <param name="entityType">Der Typ, der registriert oder konfiguriert werden soll.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.AddProcedure(System.Web.Http.OData.Builder.ProcedureConfiguration)">
      <summary>Fügt dem Modell eine Prozedur hinzu.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.ComplexType``1">
      <summary>Registriert einen Typ als komplexen Typ im Modell und gibt ein Objekt zurück, das zum Konfigurieren des komplexen Typs verwendet werden kann. Diese Methode kann mehrmals für den gleichen Typ aufgerufen werden, um mehrere Konfigurationszeilen auszuführen.</summary>
      <returns>Das Konfigurationsobjekt für den angegebenen komplexen Typ.</returns>
      <typeparam name="TComplexType">Der Typ, der registriert oder konfiguriert werden soll.</typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.ContainerName">
      <summary>Ruft den Namen des Containers ab, der alle EntitySets, Aktionen und Funktionen enthält, bzw. legt diesen fest.</summary>
      <returns>Gibt <see cref="T:System.String" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.DataServiceVersion">
      <summary>Ruft die Datendienstversion des Modells ab oder legt diese fest. Der Standardwert ist 3.0.</summary>
      <returns>Gibt <see cref="T:System.Version" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.Entity``1">
      <summary>Registriert einen Entitätstyp als Teil des Modells und gibt ein Objekt zurück, das zum Konfigurieren der Entität verwendet werden kann. Diese Methode kann mehrmals für die gleiche Entität aufgerufen werden, um mehrere Konfigurationszeilen auszuführen.</summary>
      <returns>Das Konfigurationsobjekt für den angegebenen Entitätstyp.</returns>
      <typeparam name="TEntityType">Der Typ, der registriert oder konfiguriert werden soll.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.EntitySet``1(System.String)">
      <summary>Registriert eine Entitätssammlung als Teil des Modells und gibt ein Objekt zurück, das zum Konfigurieren der Entitätssammlung verwendet werden kann. Diese Methode kann mehrmals für den gleichen Typ aufgerufen werden, um mehrere Konfigurationszeilen auszuführen.</summary>
      <returns>Das Konfigurationsobjekt für die angegebene Entitätssammlung.</returns>
      <param name="name">Der Name der Entitätssammlung.</param>
      <typeparam name="TEntityType">Der Entitätstyp der Entitätssammlung.</typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.EntitySets">
      <summary>Ruft die Auflistung der EDM-Entitätssammlungen ab, die im Modell erstellt werden sollen.</summary>
      <returns>Gibt <see cref="T:System.Collections.Generic.IEnumerable`1" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.GetEdmModel">
      <summary>Erstellt ein <see cref="T:Microsoft.Data.Edm.IEdmModel" /> basierend auf der Konfiguration, die mithilfe dieses Generators ausgeführt wurde.</summary>
      <returns>Das Modell, das erstellt wurde.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.GetTypeConfigurationOrNull(System.Type)">
      <summary>Versucht, einen vorkonfigurierten strukturellen Typ oder einen primitiven Typ zu ermitteln, der mit T übereinstimmt. Wenn keine Übereinstimmungen gefunden werden, wird NULL zurückgegeben.</summary>
      <returns>Gibt <see cref="T:System.Web.Http.OData.Builder.IEdmTypeConfiguration" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.MaxDataServiceVersion">
      <summary>Ruft die maximale Datendienstversion des Modells ab oder legt diese fest. Der Standardwert ist 3.0.</summary>
      <returns>Gibt <see cref="T:System.Version" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.Namespace">
      <summary>Ruft den Namespace ab, der für das sich ergebende Modell verwendet wird, oder legt diesen fest.</summary>
      <returns>Gibt <see cref="T:System.String" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.Procedures">
      <summary>Ruft die Auflistung der Prozeduren (Aktionen, Funktionen und ServiceOperations) ab, die im Modell erstellt werden sollen.</summary>
      <returns>Gibt <see cref="T:System.Collections.Generic.IEnumerable`1" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.RemoveEntitySet(System.String)">
      <summary>Entfernt die Entitätssammlung aus dem Modell.</summary>
      <returns>
        <see cref="" />, wenn die Entitätssammlung im Modell vorhanden ist, andernfalls <see cref="" />.</returns>
      <param name="name">Der Name der Entitätssammlung, die entfernt werden soll.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.RemoveProcedure(System.String)">
      <summary>      Entfernt die Prozedur aus dem Modell.</summary>
      <returns>true, wenn die Prozedur im Modell vorhanden ist, andernfalls false.</returns>
      <param name="name">Der Name der Prozedur, die entfernt werden soll.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.RemoveProcedure(System.Web.Http.OData.Builder.ProcedureConfiguration)">
      <summary>Entfernt die Prozedur aus dem Modell.</summary>
      <returns>true, wenn die Prozedur im Modell vorhanden ist, andernfalls false.</returns>
      <param name="procedure">Die zu entfernende Prozedur.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.RemoveStructuralType(System.Type)">
      <summary>Entfernt den Typ aus dem Modell.</summary>
      <returns>true, wenn der Typ im Modell vorhanden ist, andernfalls false.</returns>
      <param name="type">Der zu entfernende Typ.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.StructuralTypes">
      <summary>Ruft die Auflistung der EDM-Typen ab, die im Modell erstellt werden sollen.</summary>
      <returns>Gibt <see cref="T:System.Collections.Generic.IEnumerable`1" /> zurück.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ParameterConfiguration">
      <summary>Stellt einen Parameter für eine Prozedur dar.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ParameterConfiguration.#ctor(System.String,System.Web.Http.OData.Builder.IEdmTypeConfiguration)"></member>
    <member name="P:System.Web.Http.OData.Builder.ParameterConfiguration.Name">
      <summary>Der Name des Parameters.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ParameterConfiguration.TypeConfiguration">
      <summary>Der Typ des Parameters.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration">
      <summary>Wird zum Konfigurieren einer primitiven Eigenschaft eines Entitätstyps oder eines komplexen Typs verwendet. Diese Konfigurationsfunktion wird von der Fluent-API des Modellgenerators bereitgestellt (siehe <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />).</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration.#ctor(System.Reflection.PropertyInfo,System.Web.Http.OData.Builder.StructuralTypeConfiguration)"></member>
    <member name="M:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration.IsOptional">
      <summary>Konfiguriert die Eigenschaft als optional.</summary>
      <returns>Gibt sich selbst zurück, damit mehrere Aufrufe verkettet werden können.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration.IsRequired">
      <summary>Konfiguriert die Eigenschaft als erforderlich.</summary>
      <returns>Gibt sich selbst zurück, damit mehrere Aufrufe verkettet werden können.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration.Kind"></member>
    <member name="P:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration.RelatedClrType"></member>
    <member name="T:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration">
      <summary>Stellt einen PrimitiveType dar.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.#ctor(System.Web.Http.OData.Builder.ODataModelBuilder,Microsoft.Data.Edm.IEdmPrimitiveType,System.Type)">
      <summary>Dieser Konstruktor ist ausschließlich für Komponententestzwecke öffentlich. Verwenden Sie ODataModelBuilder.GetTypeConfigurationOrNull(Type) zum Abrufen einer PrimitiveTypeConfiguration.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.ClrType"></member>
    <member name="P:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.EdmPrimitiveType">
      <summary>Gibt den IEdmPrimitiveType zurück, der dieser PrimitiveTypeConfiguration zugeordnet ist.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.FullName"></member>
    <member name="P:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.Kind"></member>
    <member name="P:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.ModelBuilder"></member>
    <member name="P:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.Name"></member>
    <member name="P:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.Namespace"></member>
    <member name="T:System.Web.Http.OData.Builder.ProcedureConfiguration">
      <summary>Stellt eine Prozedur dar, die im Modell bereitgestellt wird.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ProcedureConfiguration.#ctor"></member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.ContainerQualifiedName">
      <summary>Der qualifizierte Name der Prozedur, wenn diese in OData-URLs verwendet wird. Qualifizierung ist erforderlich, um die Prozedur von anderen möglichen einteiligen Bezeichnern zu unterscheiden.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.EntitySet">
      <summary>Das EntitySet-Objekt, aus dem Entitäten zurückgegeben werden.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.FullName">
      <summary>Der FullName ist der ContainerQualifiedName.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.FullyQualifiedName">
      <summary>Der FullyQualifiedName ist der ContainerQualifiedName, der mithilfe des Namespaces weiter qualifiziert wurde. Normalerweise ist dies nicht erforderlich, weil die meisten Dienste höchstens einen Container mit dem gleichen Namen besitzen.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.IsAlwaysBindable">
      <summary>Wenn die Prozedur IsBindable ist, kann sie immer gebunden werden?</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.IsBindable">
      <summary>Kann die Prozedur an eine URL gebunden werden, die den BindingParameter darstellt?</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.IsComposable">
      <summary>Kann die Prozedur auf dieser Grundlage erstellt werden? Kann eine URL, die die Prozedur aufruft, z. B. als Basis-URL für eine Anforderung verwendet werden, die die Prozedur aufruft und die Ergebnisse anderweitig verarbeitet?</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.IsSideEffecting">
      <summary>Besitzt die Prozedur Nebenwirkungen?</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.Kind">
      <summary>Die Art der Prozedur. Dabei kann es sich um Action, Function oder ServiceOperation handeln.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.ModelBuilder"></member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.Name">
      <summary>Der Name der Prozedur.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.Parameters">
      <summary>Die Parameter, die die Prozedur annimmt.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.ReturnType">
      <summary>Der Typ, der beim Aufrufen der Prozedur zurückgegeben wird.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ProcedureKind">
      <summary>Die Art der OData-Prozedur. Folgende Werte sind möglich: Action, Function oder ServiceOperation.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Builder.ProcedureKind.Action">
      <summary />
    </member>
    <member name="F:System.Web.Http.OData.Builder.ProcedureKind.Function">
      <summary />
    </member>
    <member name="F:System.Web.Http.OData.Builder.ProcedureKind.ServiceOperation">
      <summary />
    </member>
    <member name="T:System.Web.Http.OData.Builder.PropertyConfiguration">
      <summary>Die Basisklasse für alle Eigenschaftenkonfigurationen.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.PropertyConfiguration.#ctor(System.Reflection.PropertyInfo,System.Web.Http.OData.Builder.StructuralTypeConfiguration)"></member>
    <member name="P:System.Web.Http.OData.Builder.PropertyConfiguration.AddedExplicitly">
      <returns>Gibt <see cref="T:System.Boolean" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PropertyConfiguration.DeclaringType">
      <returns>Gibt <see cref="T:System.Web.Http.OData.Builder.StructuralTypeConfiguration" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PropertyConfiguration.Kind">
      <summary>Ruft das <see cref="T:System.Web.Http.OData.Builder.PropertyKind" />-Objekt der Eigenschaft ab.</summary>
      <returns>Gibt <see cref="T:System.Web.Http.OData.Builder.PropertyKind" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PropertyConfiguration.Name">
      <summary>Ruft den Namen der Eigenschaft ab.</summary>
      <returns>Gibt <see cref="T:System.String" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PropertyConfiguration.PropertyInfo">
      <summary>Ruft das <see cref="P:System.Web.Http.OData.Builder.PropertyConfiguration.PropertyInfo" />-Objekt für die CLR-Zuordnung ab.</summary>
      <returns>Gibt <see cref="T:System.Reflection.PropertyInfo" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PropertyConfiguration.RelatedClrType">
      <summary>Ruft den CLR-<see cref="T:System.Type" /> der Eigenschaft ab.</summary>
      <returns>Gibt <see cref="T:System.Type" /> zurück.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Builder.PropertyKind"></member>
    <member name="F:System.Web.Http.OData.Builder.PropertyKind.Primitive">
      <summary>.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Builder.PropertyKind.Complex">
      <summary>.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Builder.PropertyKind.Collection">
      <summary>.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Builder.PropertyKind.Navigation">
      <summary>.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.SelfLinkBuilder`1">
      <summary> Verkapselt eine Self-Linkfactory und gibt an, ob die Linkfactory Konventionen beachtet. </summary>
      <typeparam name="T">Der Typ des generierten Self-Links. Dies gilt für ID-Links und für Lese- und Bearbeitungslinks.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.SelfLinkBuilder`1.#ctor(System.Func{System.Web.Http.OData.EntityInstanceContext,`0},System.Boolean)">
      <summary> Generiert eine neue Instanz von <see cref="T:System.Web.Http.OData.Builder.SelfLinkBuilder`1" />. </summary>
      <param name="linkFactory">Die Linkfactory.</param>
      <param name="followsConventions">Gibt an, ob die Factory OData-Konventionen für die Linkgenerierung beachtet.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.SelfLinkBuilder`1.Factory">
      <summary> Ruft die Factory zum Generieren von Links ab. </summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.SelfLinkBuilder`1.FollowsConventions">
      <summary> Ruft einen booleschen Wert ab, der angibt, ob die Linkfactory OData-Konventionen beachtet. </summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.StructuralPropertyConfiguration">
      <summary>Die Basisklasse für alle strukturellen Eigenschaftenkonfigurationen.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralPropertyConfiguration.#ctor(System.Reflection.PropertyInfo,System.Web.Http.OData.Builder.StructuralTypeConfiguration)"></member>
    <member name="P:System.Web.Http.OData.Builder.StructuralPropertyConfiguration.OptionalProperty"></member>
    <member name="T:System.Web.Http.OData.Builder.StructuralTypeConfiguration">
      <summary>Stellt einen <see cref="T:Microsoft.Data.Edm.IEdmStructuredType" /> dar, der mithilfe von <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" /> erstellt werden kann.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration.#ctor"></member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration.#ctor(System.Web.Http.OData.Builder.ODataModelBuilder,System.Type)"></member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration.AddCollectionProperty(System.Reflection.PropertyInfo)">
      <summary>Fügt diesem EDM-Typ eine Auflistungseigenschaft hinzu.</summary>
      <returns>Die <see cref="T:System.Web.Http.OData.Builder.CollectionPropertyConfiguration" />, mit der die Eigenschaft weiter konfiguriert werden kann.</returns>
      <param name="propertyInfo">Die Eigenschaft, die hinzugefügt wird.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration.AddComplexProperty(System.Reflection.PropertyInfo)">
      <summary>Fügt diesem EDM-Typ eine komplexe Eigenschaft hinzu.</summary>
      <returns>Die <see cref="T:System.Web.Http.OData.Builder.ComplexPropertyConfiguration" />, mit der die Eigenschaft weiter konfiguriert werden kann.</returns>
      <param name="propertyInfo">Die Eigenschaft, die hinzugefügt wird.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration.AddProperty(System.Reflection.PropertyInfo)">
      <summary>Fügt diesem EDM-Typ eine primitive Eigenschaft hinzu.</summary>
      <returns>Die <see cref="T:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration" />, mit der die Eigenschaft weiter konfiguriert werden kann.</returns>
      <param name="propertyInfo">Die Eigenschaft, die hinzugefügt wird.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.ClrType">
      <summary>Ruft den unterstützenden CLR-<see cref="T:System.Type" /> ab.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.ExplicitProperties"></member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.FullName">
      <summary>Ruft den vollständigen Namen dieses EDM-Typs ab.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.IgnoredProperties">
      <summary>Ruft die Eigenschaften aus dem unterstützenden CLR-Typ ab, die für diesen EDM-Typ ignoriert werden sollen.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.Kind">
      <summary>Ruft das <see cref="T:Microsoft.Data.Edm.EdmTypeKind" />-Objekt dieses EDM-Typs ab.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.ModelBuilder">
      <summary>Das <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />-Objekt.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.Name">
      <summary>Ruft den Namen dieses EDM-Typs ab.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.Namespace">
      <summary>Ruft den Namespace dieses EDM-Typs ab.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.Properties">
      <summary>Ruft die deklarierten Eigenschaften für diesen EDM-Typ ab.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.RemovedProperties"></member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration.RemoveProperty(System.Reflection.PropertyInfo)">
      <summary>Entfernt die angegebene Eigenschaft.</summary>
      <param name="propertyInfo">Die Eigenschaft, die entfernt wird.</param>
    </member>
    <member name="T:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1">
      <typeparam name="TStructuralType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.#ctor(System.Web.Http.OData.Builder.StructuralTypeConfiguration)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.CollectionProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})">
      <typeparam name="TElementType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.ComplexProperty``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <typeparam name="TComplexType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.Ignore``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <typeparam name="TProperty"></typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.Properties"></member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Byte[]}})"></member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.IO.Stream}})"></member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.Property``1(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{``0}}})">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.String}})"></member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.Property``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <typeparam name="T"></typeparam>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter">
      <summary>
        <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" />-Klasse zur Verarbeitung von OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.CanReadType(System.Type)">
      <returns>Gibt <see cref="T:System.Boolean" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.CanWriteType(System.Type)">
      <returns>Gibt <see cref="T:System.Boolean" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.GetPerRequestFormatterInstance(System.Type,System.Net.Http.HttpRequestMessage,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <returns>Gibt <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.MessageReaderQuotas">
      <summary>Ruft die von diesem Formatierer auf der Leseseite verwendeten <see cref="T:Microsoft.Data.OData.ODataMessageQuotas" /> ab oder legt sie fest.</summary>
      <returns>Gibt <see cref="T:Microsoft.Data.OData.ODataMessageQuotas" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.MessageWriterQuotas">
      <summary>Ruft die von diesem Formatierer auf der Schreibseite verwendeten <see cref="T:Microsoft.Data.OData.ODataMessageQuotas" /> ab oder legt sie fest.</summary>
      <returns>Gibt <see cref="T:Microsoft.Data.OData.ODataMessageQuotas" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.HttpContent,System.Net.Http.Formatting.IFormatterLogger)">
      <returns>Gibt <see cref="T:System.Threading.Tasks.Task`1" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.SetDefaultContentHeaders(System.Type,System.Net.Http.Headers.HttpContentHeaders,System.Net.Http.Headers.MediaTypeHeaderValue)"></member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.WriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext)">
      <returns>Gibt <see cref="T:System.Threading.Tasks.Task" /> zurück.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.ODataMediaTypeFormatters">
      <summary>
        <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" />-Klassen zur Verarbeitung von OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatters.Create">
      <summary>Erstellt eine Sammlung von Medientypformatierern zum Verarbeiten von OData.</summary>
      <returns>Eine Sammlung von Medientypformatierern zum Verarbeiten von OData.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.ODataModelBinderProvider">
      <summary>Stellt ein <see cref="T:System.Web.Http.ModelBinding.IModelBinder" />-Objekt für primitive EDM-Typen zur Verfügung.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataModelBinderProvider.#ctor"></member>
    <member name="M:System.Web.Http.OData.Formatter.ODataModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)"></member>
    <member name="T:System.Web.Http.OData.Query.AllowedArithmeticOperators">
      <summary> Arithmetische Operatoren, die Abfragen mithilfe von $filter ermöglichen. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedArithmeticOperators.None">
      <summary> Ein Wert, der keine arithmetischen Operatoren in $filter erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedArithmeticOperators.Add">
      <summary> Ein Wert, der den arithmetischen Operator "Add" in $filter erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedArithmeticOperators.Subtract">
      <summary> Ein Wert, der den arithmetischen Operator "Subtract" in $filter erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedArithmeticOperators.Multiply">
      <summary> Ein Wert, der den arithmetischen Operator "Multiply" in $filter erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedArithmeticOperators.Divide">
      <summary> Ein Wert, der den arithmetischen Operator "Divide" in $filter erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedArithmeticOperators.Modulo">
      <summary> Ein Wert, der den arithmetischen Operator "Modulo" in $filter erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedArithmeticOperators.All">
      <summary> Ein Wert, der alle arithmetischen Operatoren in $filter erlaubt. </summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.AllowedFunctions">
      <summary> Funktionen, die Abfragen mithilfe von $filter ermöglichen. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.None">
      <summary> Ein Wert, der keine Funktionen in $filter erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.StartsWith">
      <summary> Ein Wert, der die Funktion StartsWith in $filter erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.EndsWith">
      <summary> Ein Wert, der die Funktion EndsWith in $filter erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.SubstringOf">
      <summary> Ein Wert, der die Funktion SubstringOf in $filter erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Length">
      <summary> Ein Wert, der die Funktion Length in $filter erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.IndexOf">
      <summary> Ein Wert, der die Funktion IndexOf in $filter erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Concat">
      <summary> Ein Wert, der die Funktion Concat in $filter erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Substring">
      <summary> Ein Wert, der die Funktion Substring in $filter erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.ToLower">
      <summary> Ein Wert, der die Funktion ToLower in $filter erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.ToUpper">
      <summary> Ein Wert, der die Funktion ToUpper in $filter erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Trim">
      <summary> Ein Wert, der die Funktion Trim in $filter erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Cast">
      <summary> Ein Wert, der die Funktion Cast in $filter erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Year">
      <summary> Ein Wert, der die Funktion Year in $filter erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Years">
      <summary> Ein Wert, der die Funktion Years in $filter erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Month">
      <summary> Ein Wert, der die Funktion Month in $filter erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Months">
      <summary> Ein Wert, der die Funktion Months in $filter erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Day">
      <summary> Ein Wert, der die Funktion Day in $filter erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Days">
      <summary> Ein Wert, der die Funktion Days in $filter erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Hour">
      <summary> Ein Wert, der die Funktion Hour in $filter erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Hours">
      <summary> Ein Wert, der die Funktion Hours in $filter erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Minute">
      <summary> Ein Wert, der die Funktion Minute in $filter erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Minutes">
      <summary> Ein Wert, der die Funktion Minutes in $filter erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Second">
      <summary> Ein Wert, der die Funktion Second in $filter erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Seconds">
      <summary> Ein Wert, der die Funktion Seconds in $filter erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Round">
      <summary> Ein Wert, der die Funktion Round in $filter erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Floor">
      <summary> Ein Wert, der die Funktion Floor in $filter erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Ceiling">
      <summary> Ein Wert, der die Funktion Ceiling in $filter erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.IsOf">
      <summary> Ein Wert, der die Funktion IsOf in $filter erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Any">
      <summary> Ein Wert, der die Funktion Any in $filter erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.All">
      <summary> Ein Wert, der die Funktion All in $filter erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.AllStringFunctions">
      <summary> Ein Wert, der alle zeichenfolgenbezogenen Funktionen in $filter erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.AllDateTimeFunctions">
      <summary> Ein Wert, der alle DateTime-bezogenen Funktionen in $filter erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.AllMathFunctions">
      <summary> Ein Wert, der alle mathematischen Funktionen in $filter erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.AllFunctions">
      <summary> Ein Wert, der alle Funktion in $filter erlaubt. </summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.AllowedLogicalOperators">
      <summary> Logische Operatoren, die Abfragen mithilfe von $filter ermöglichen. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.None">
      <summary> Ein Wert, der keine logischen Operatoren in $filter erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.Or">
      <summary> Ein Wert, der den logischen Operator "Or" in $filter erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.And">
      <summary> Ein Wert, der den logischen Operator "And" in $filter erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.Equal">
      <summary> Ein Wert, der den logischen Operator "Equal" in $filter erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.NotEqual">
      <summary> Ein Wert, der den logischen Operator "NotEqual" in $filter erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.GreaterThan">
      <summary> Ein Wert, der den logischen Operator "GreaterThan" in $filter erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.GreaterThanOrEqual">
      <summary> Ein Wert, der den logischen Operator "GreaterThanOrEqual" in $filter erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.LessThan">
      <summary> Ein Wert, der den logischen Operator "LessThan" in $filter erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.LessThanOrEqual">
      <summary> Ein Wert, der den logischen Operator "LessThanOrEqual" in $filter erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.Not">
      <summary> Ein Wert, der den logischen Operator "Not" in $filter erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.All">
      <summary> Ein Wert, der alle logischen Operatoren in $filter erlaubt. </summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.AllowedQueryOptions">
      <summary> OData-Abfrageoptionen, die Abfragen erlauben. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.None">
      <summary> Ein Wert, der keine Abfrageoptionen erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.Filter">
      <summary> Ein Wert, der die Abfrageoption $filter erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.Expand">
      <summary> Ein Wert, der die Abfrageoption $expand erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.Select">
      <summary> Ein Wert, der die Abfrageoption $select erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.OrderBy">
      <summary> Ein Wert, der die Abfrageoption $orderby erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.Top">
      <summary> Ein Wert, der die Abfrageoption $top erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.Skip">
      <summary> Ein Wert, der die Abfrageoption $skip erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.InlineCount">
      <summary> Ein Wert, der die Abfrageoption $inlinecount erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.Format">
      <summary> Ein Wert, der die Abfrageoption $format erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.SkipToken">
      <summary> Ein Wert, der die Abfrageoption $skiptoken erlaubt. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.Supported">
      <summary> Ein Wert, der den Standardabfrageoptionen entspricht, die von <see cref="T:System.Web.Http.QueryableAttribute" /> unterstützt werden. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.All">
      <summary> Ein Wert, der alle Abfrageoptionen erlaubt. </summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.FilterQueryOption">
      <summary>Definiert eine $filter-Abfrageoption von OData für die Abfrage.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.FilterQueryOption.#ctor(System.String,System.Web.Http.OData.ODataQueryContext)">
      <summary>Initialisiert eine neue Instanz von <see cref="T:System.Web.Http.OData.Query.FilterQueryOption" /> basierend auf dem $filter-Rohwert und einem EdmModel aus <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</summary>
      <param name="rawValue">Der Rohwert für die $filter-Abfrage. Darf null oder leer sein.</param>
      <param name="context">Der <see cref="T:System.Web.Http.OData.ODataQueryContext" />, der das <see cref="T:Microsoft.Data.Edm.IEdmModel" /> und einige Typinformationen enthält.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.FilterQueryOption.ApplyTo(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary>Wendet die Filterabfrage auf das angegebene IQueryable-Objekt an.</summary>
      <returns>Die Abfrage, auf die die Filterabfrage angewendet wurde.</returns>
      <param name="query">Das IQueryable-Objekt, für das die Filterabfrage angewendet wird.</param>
      <param name="querySettings">Gibt an, ob Nullweitergabe verarbeitet werden muss. Übergeben Sie false, wenn der zugrunde liegende Abfrageanbieter Nullweitergabe verarbeitet. Übergeben Sie andernfalls true.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.FilterQueryOption.ApplyTo(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQuerySettings,System.Web.Http.Dispatcher.IAssembliesResolver)">
      <summary>Wendet die Filterabfrage auf das angegebene IQueryable-Objekt an.</summary>
      <returns>Gibt <see cref="T:System.Linq.IQueryable" /> zurück.</returns>
      <param name="query">Das IQueryable-Objekt, für das die Filterabfrage angewendet wird.</param>
      <param name="querySettings">Gibt an, ob Nullweitergabe verarbeitet werden muss. Übergeben Sie false, wenn der zugrunde liegende Abfrageanbieter Nullweitergabe verarbeitet. Übergeben Sie andernfalls true.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.FilterQueryOption.Context">
      <summary>Ruft den angegebenen <see cref="T:System.Web.Http.OData.ODataQueryContext" /> ab.</summary>
      <returns>Gibt <see cref="T:System.Web.Http.OData.ODataQueryContext" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.FilterQueryOption.FilterClause">
      <summary>Ruft das analysierte <see cref="P:System.Web.Http.OData.Query.FilterQueryOption.FilterClause" />-Objekt für diese Abfrageoption ab.</summary>
      <returns>Gibt <see cref="T:Microsoft.Data.OData.Query.SemanticAst.FilterClause" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.FilterQueryOption.RawValue">
      <summary>Ruft den $filter-Rohwert ab.</summary>
      <returns>Gibt <see cref="T:System.String" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Query.FilterQueryOption.Validate(System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Überprüft die Filterabfrage basierend auf den angegebenen <paramref name="validationSettings" />. Bei einem Überprüfungsfehler wird ODataException ausgelöst.</summary>
      <param name="validationSettings">Die <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" />-Instanz, die alle Überprüfungseinstellungen enthält.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.FilterQueryOption.Validator">
      <summary>Ruft den Filterabfragevalidator ab oder legt ihn fest.</summary>
      <returns>Gibt <see cref="T:System.Web.Http.OData.Query.Validators.FilterQueryValidator" /> zurück.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Query.HandleNullPropagationOption">
      <summary>Diese Enumeration definiert, wie Nullweitergabe in abfragbarer Unterstützung verarbeitet wird.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.HandleNullPropagationOption.Default">
      <summary>Bestimmt, wie Nullweitergabe basierend auf dem Abfrageanbieter während der Abfragekomposition verarbeitet wird. Dies ist der in <see cref="T:System.Web.Http.OData.Query.ODataQuerySettings" /> verwendete Standardwert.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.HandleNullPropagationOption.True">
      <summary>Nullweitergabe während der Abfragekomposition verarbeiten.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.HandleNullPropagationOption.False">
      <summary>Nullweitergabe während der Abfragekomposition nicht verarbeiten.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.InlineCountQueryOption">
      <summary> Stellt den Wert der $inlinecount-Abfrageoption dar und stellt ein Verfahren zum Abrufen der Anzahl der Entitäten zur Verfügung, die einer Abfrage genügen. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.InlineCountQueryOption.#ctor(System.String,System.Web.Http.OData.ODataQueryContext)">
      <summary> Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.OData.Query.InlineCountQueryOption" />-Klasse. </summary>
      <param name="rawValue">Der Rohwert für die $inlinecount-Abfrageoption.</param>
      <param name="context">Der <see cref="T:System.Web.Http.OData.ODataQueryContext" />, der das <see cref="T:Microsoft.Data.Edm.IEdmModel" /> und einige Typinformationen enthält.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.InlineCountQueryOption.Context">
      <summary> Ruft den angegebenen <see cref="T:System.Web.Http.OData.ODataQueryContext" /> ab. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.InlineCountQueryOption.GetEntityCount(System.Linq.IQueryable)">
      <summary> Ruft die Anzahl der Entitäten ab, die der angegebenen Abfrage genügen, wenn die Antwort eine Inlineanzahl enthalten soll. Andernfalls null. </summary>
      <returns>Die Anzahl der Entitäten, die der angegebenen Abfrage genügen, wenn die Antwort eine Inlineanzahl enthalten soll. Andernfalls null.</returns>
      <param name="query">Die Abfrage, für die die Anzahl berechnet werden soll.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.InlineCountQueryOption.RawValue">
      <summary> Ruft den $inlinecount-Rohwert ab. </summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.InlineCountQueryOption.Value">
      <summary> Ruft den Wert von $inlinecount in analysierter Form ab. </summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.InlineCountValue">
      <summary> Definiert eine Enumeration für $inlinecount-Abfrageoptionswerte. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.InlineCountValue.None">
      <summary> Entspricht dem $inlinecount-Abfrageoptionswert none. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.InlineCountValue.AllPages">
      <summary> Entspricht dem $inlinecount-Abfrageoptionswert allpages. </summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.ODataQueryOptions">
      <summary>Definiert zusammengesetzte OData-Abfrageoptionen, die zum Ausführen der Abfragekomposition verwendet werden können. Zurzeit werden nur die Optionen $filter, $orderby, $top, $skip und $inlinecount unterstützt.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions.#ctor(System.Web.Http.OData.ODataQueryContext,System.Net.Http.HttpRequestMessage)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.OData.Query.ODataQueryOptions" />-Klasse basierend auf der eingehenden Anforderung und einigen Metadateninformationen aus dem <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</summary>
      <param name="context">Der <see cref="T:System.Web.Http.OData.ODataQueryContext" />, der das <see cref="T:Microsoft.Data.Edm.IEdmModel" /> und einige Typinformationen enthält.</param>
      <param name="request">Die eingehende Anforderungsnachricht.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions.ApplyTo(System.Linq.IQueryable)">
      <summary>  Wendet die einzelne Abfrage auf das angegebene IQueryable-Objekt in der richtigen Reihenfolge an.</summary>
      <returns>Die Abfrage, auf die die Abfrage angewendet wurde.</returns>
      <param name="query">Das IQueryable-Objekt, auf das die Abfrage angewendet wird.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions.ApplyTo(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary>Wendet die einzelne Abfrage auf das angegebene IQueryable-Objekt in der richtigen Reihenfolge an.</summary>
      <returns>Die Abfrage, auf die die Abfrage angewendet wurde.</returns>
      <param name="query">Das IQueryable-Objekt, auf das die Abfrage angewendet wird.</param>
      <param name="querySettings">Die Einstellungen, die in der Abfragekomposition verwendet werden sollen.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.Context">
      <summary>Ruft den angegebenen <see cref="T:System.Web.Http.OData.ODataQueryContext" /> ab.</summary>
      <returns>Gibt <see cref="T:System.Web.Http.OData.ODataQueryContext" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.Filter">
      <summary>Ruft die <see cref="T:System.Web.Http.OData.Query.FilterQueryOption" /> ab.</summary>
      <returns>Gibt <see cref="T:System.Web.Http.OData.Query.FilterQueryOption" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.InlineCount">
      <summary>Ruft die <see cref="T:System.Web.Http.OData.Query.InlineCountQueryOption" /> ab.</summary>
      <returns>Gibt <see cref="T:System.Web.Http.OData.Query.InlineCountQueryOption" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions.IsSystemQueryOption(System.String)">
      <summary>Überprüft, ob die angegebene Abfrageoption eine OData-Systemabfrageoption ist.</summary>
      <returns>true, wenn die Abfrageoption eine OData-Systemabfrageoption ist, andernfalls false.</returns>
      <param name="queryOptionName">Der Name der Abfrageoption.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions.LimitResults``1(System.Linq.IQueryable{``0},System.Int32,System.Boolean@)">
      <summary>Schränkt die Abfrageergebnisse auf eine maximale Anzahl von Ergebnissen ein.</summary>
      <returns>Die eingeschränkten Abfrageergebnisse.</returns>
      <param name="queryable">Das einzuschränkende abfragbare Objekt.</param>
      <param name="limit">Der Grenzwert für die Abfrageergebnisse.</param>
      <param name="resultsLimited">true, wenn die Abfrageergebnisse eingeschränkt wurden, andernfalls false.</param>
      <typeparam name="T">Der CLR-Entitätstyp.</typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.OrderBy">
      <summary>Ruft die <see cref="T:System.Web.Http.OData.Query.OrderByQueryOption" /> ab.</summary>
      <returns>Gibt <see cref="T:System.Web.Http.OData.Query.OrderByQueryOption" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.RawValues">
      <summary>Ruft die Rohzeichenfolge aller OData-Abfrageoptionen ab.</summary>
      <returns>Gibt <see cref="T:System.Web.Http.OData.Query.ODataRawQueryOptions" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.Request">
      <summary>Ruft die Anforderungsnachricht ab, die dieser Instanz zugeordnet ist.</summary>
      <returns>Gibt <see cref="T:System.Net.Http.HttpRequestMessage" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.Skip">
      <summary>Ruft die <see cref="T:System.Web.Http.OData.Query.SkipQueryOption" /> ab.</summary>
      <returns>Gibt <see cref="T:System.Web.Http.OData.Query.SkipQueryOption" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.Top">
      <summary>Ruft die <see cref="T:System.Web.Http.OData.Query.TopQueryOption" /> ab.</summary>
      <returns>Gibt <see cref="T:System.Web.Http.OData.Query.TopQueryOption" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions.Validate(System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Überprüft alle OData-Abfragen (einschließlich $skip, $top, $orderby und $filter) basierend auf den angegebenen <paramref name="validationSettings" />. Löst bei einem Überprüfungsfehler ODataException aus.</summary>
      <param name="validationSettings">Die <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" />-Instanz, die alle Überprüfungseinstellungen enthält.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.Validator">
      <summary>Ruft den Abfragevalidator ab oder legt ihn fest.</summary>
      <returns>Gibt <see cref="T:System.Web.Http.OData.Query.Validators.ODataQueryValidator" /> zurück.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Query.ODataQueryOptions`1">
      <summary>Definiert zusammengesetzte OData-Abfrageoptionen, die zum Ausführen der Abfragekomposition verwendet werden können. Zurzeit werden nur die Optionen $filter, $orderby, $top und $skip unterstützt.</summary>
      <typeparam name="TEntity"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions`1.#ctor(System.Web.Http.OData.ODataQueryContext,System.Net.Http.HttpRequestMessage)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.OData.Query.ODataQueryOptions" />-Klasse basierend auf der eingehenden Anforderung und einigen Metadateninformationen aus dem <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</summary>
      <param name="context">Der <see cref="T:System.Web.Http.OData.ODataQueryContext" />, der das <see cref="T:Microsoft.Data.Edm.IEdmModel" /> und einige Typinformationen enthält.</param>
      <param name="request">Die eingehende Anforderungsnachricht.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions`1.ApplyTo(System.Linq.IQueryable)">
      <summary>Wendet die einzelne Abfrage auf das angegebene IQueryable-Objekt in der richtigen Reihenfolge an.</summary>
      <returns>Die Abfrage, auf die die Abfrage angewendet wurde.</returns>
      <param name="query">Das IQueryable-Objekt, auf das die Abfrage angewendet wird.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions`1.ApplyTo(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary>Wendet die einzelne Abfrage auf das angegebene IQueryable-Objekt in der richtigen Reihenfolge an.</summary>
      <returns>Die Abfrage, auf die die Abfrage angewendet wurde.</returns>
      <param name="query">Das IQueryable-Objekt, auf das die Abfrage angewendet wird.</param>
      <param name="querySettings">Die Einstellungen, die in der Abfragekomposition verwendet werden sollen.</param>
    </member>
    <member name="T:System.Web.Http.OData.Query.ODataQuerySettings">
      <summary>Diese Klasse beschreibt die Einstellungen, die während der Abfragekomposition verwendet werden sollen.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQuerySettings.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.OData.Query.ODataQuerySettings" />-Klasse und initialisiert die Standardeinstellungen.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQuerySettings.#ctor(System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.OData.Query.ODataQuerySettings" />-Klasse basierend auf einer vorhandenen Instanz.</summary>
      <param name="settings">Die Einstellung, aus der kopiert werden soll.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQuerySettings.EnableConstantParameterization">
      <summary>Ruft einen Wert ab, der angibt, ob Konstanten parameterisiert werden sollen, oder legt diesen Wert fest. Das Parameterisieren von Konstanten führt zu einer optimierten Leistung mit Entity Framework.</summary>
      <returns>Der Standardwert ist True.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQuerySettings.EnsureStableOrdering">
      <summary>Ruft einen Wert ab, der angibt, ob die Abfragekomposition die ursprüngliche Abfrage bei Bedarf ändern soll, um eine stabile Sortierreihenfolge sicherzustellen, bzw. legt diesen Wert fest.</summary>
      <returns>Ein Wert von true zeigt an, dass die ursprüngliche Abfrage bei Bedarf geändert werden soll, um eine stabile Sortierreihenfolge zu gewährleisten. Ein Wert von false zeigt an, dass die Sortierreihenfolge als stabil betrachtet werden kann, ohne die Abfrage zu ändern. Abfrageanbieter, die eine stabile Sortierreihenfolge gewährleisten, sollten diesen Wert auf false festlegen. Der Standardwert ist true.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQuerySettings.HandleNullPropagation">
      <summary>Ruft einen Wert ab, der angibt, wie Nullweitergabe während der Abfragekomposition verarbeitet werden soll, bzw. legt diesen Wert fest.</summary>
      <returns>Der Standardwert ist <see cref="F:System.Web.Http.OData.Query.HandleNullPropagationOption.Default" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQuerySettings.PageSize">
      <summary>Ruft die maximal zurückzugebende Anzahl von Abfrageergebnissen ab oder legt diese fest.</summary>
      <returns>Die maximal zurückzugebende Anzahl von Abfrageergebnissen oder null, wenn kein Grenzwert vorhanden ist.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Query.ODataRawQueryOptions">
      <summary>Stellt die Abfragerohwerte im Zeichenfolgenformat aus der eingehenden Anforderung dar.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataRawQueryOptions.#ctor"></member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.Expand">
      <summary>Ruft den $expand-Abfragerohwert aus dem eingehenden Anforderungs-URI ab, wenn vorhanden.</summary>
      <returns>Gibt <see cref="T:System.String" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.Filter">
      <summary>Ruft den $filter-Abfragerohwert aus dem eingehenden Anforderungs-URI ab, wenn vorhanden.</summary>
      <returns>Gibt <see cref="T:System.String" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.Format">
      <summary>Ruft den $format-Abfragerohwert aus dem eingehenden Anforderungs-URI ab, wenn vorhanden.</summary>
      <returns>Gibt <see cref="T:System.String" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.InlineCount">
      <summary>Ruft den $inlineCount-Abfragerohwert aus dem eingehenden Anforderungs-URI ab, wenn vorhanden.</summary>
      <returns>Gibt <see cref="T:System.String" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.OrderBy">
      <summary>Ruft den $orderby-Abfragerohwert aus dem eingehenden Anforderungs-URI ab, wenn vorhanden.</summary>
      <returns>Gibt <see cref="T:System.String" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.Select">
      <summary>Ruft den $select-Abfragerohwert aus dem eingehenden Anforderungs-URI ab, wenn vorhanden.</summary>
      <returns>Gibt <see cref="T:System.String" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.Skip">
      <summary>Ruft den $skip-Abfragerohwert aus dem eingehenden Anforderungs-URI ab, wenn vorhanden.</summary>
      <returns>Gibt <see cref="T:System.String" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.SkipToken">
      <summary>Ruft den $skiptoken-Abfragerohwert aus dem eingehenden Anforderungs-URI ab, wenn vorhanden.</summary>
      <returns>Gibt <see cref="T:System.String" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.Top">
      <summary>Ruft den $top-Abfragerohwert aus dem eingehenden Anforderungs-URI ab, wenn vorhanden.</summary>
      <returns>Gibt <see cref="T:System.String" /> zurück.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Query.ODataValidationSettings">
      <summary> Diese Klasse beschreibt die Überprüfungseinstellungen für die Abfrage. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataValidationSettings.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.AllowedArithmeticOperators">
      <summary> Ruft eine Liste der zulässigen arithmetischen Operatoren einschließlich add, sub, mul, div und mod ab bzw. legt diese fest. </summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.AllowedFunctions">
      <summary>  Ruft eine Liste der zulässigen in der $filter-Abfrage verwendeten Funktionen ab bzw. legt diese fest.         </summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.AllowedLogicalOperators">
      <summary> Ruft eine Liste der zulässigen logischen Operatoren einschließlich eq, ne, gt, ge, lt, le, and, or, not ab bzw. legt diese fest. </summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.AllowedOrderByProperties">
      <summary> Ruft eine Liste von Eigenschaften ab, nach denen das Ergebnis sortiert werden kann. Beachten Sie, dass diese Liste standardmäßig leer ist. Dies bedeutet, dass die Sortierung nach beliebigen Eigenschaften erfolgen kann.  Wenn eine leere Auflistung vorliegt, bedeutet dies z. B., dass der Client das abfragbare Ergebnis nach beliebigen Eigenschaften sortieren kann.   Wenn dieser Liste der Wert Name hinzugefügt wird, bedeutet dies, dass das abfragbare Ergebnis nur nach der Eigenschaft Name sortiert werden darf. </summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.AllowedQueryOptions">
      <summary> Ruft die Abfrageparameter ab, die in der Abfrage zulässig sind, oder legt sie fest. Die Standardeinstellung berücksichtigt alle Abfrageoptionen einschließlich $filter, $skip, $top, $orderby, $expand, $select, $inlineCount, $format und $skipToken. </summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.MaxAnyAllExpressionDepth">
      <summary> Ruft die maximale Tiefe der geschachtelten Any- oder All-Elemente in der Abfrage ab bzw. legt diese fest. </summary>
      <returns> Die maximale Tiefe der geschachtelten Any- oder All-Elemente in der Abfrage. </returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.MaxNodeCount">
      <summary> Ruft die maximale Anzahl von Knoten in der $filter-Syntaxstruktur ab oder legt diese fest. </summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.MaxSkip">
      <summary> Ruft den maximalen Wert von $skip ab, den ein Client anfordern kann, oder legt ihn fest. </summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.MaxTop">
      <summary> Ruft den maximalen Wert von $top ab, den ein Client anfordern kann, oder legt ihn fest. </summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.OrderByItNode">
      <summary> Stellt die Sortierung nach dem Ausdruck $it in der $orderby-Klausel dar. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByItNode.#ctor(Microsoft.Data.OData.Query.OrderByDirection)">
      <summary> Instanziiert eine neue Instanz der <see cref="T:System.Web.Http.OData.Query.OrderByItNode" />-Klasse. </summary>
      <param name="direction">Das <see cref="T:Microsoft.Data.OData.Query.OrderByDirection" />-Objekt für diesen Knoten.</param>
    </member>
    <member name="T:System.Web.Http.OData.Query.OrderByNode">
      <summary> Stellt eine einzelne Sortierung nach Ausdruck in der $orderby-Klausel dar. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByNode.#ctor(Microsoft.Data.OData.Query.OrderByDirection)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.OData.Query.OrderByNode" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByNode.CreateCollection(Microsoft.Data.OData.Query.SemanticAst.OrderByClause)">
      <summary> Erstellt eine Auflistung von <see cref="T:System.Web.Http.OData.Query.OrderByPropertyNode" />-Instanzen aus einer verknüpften Liste von <see cref="T:Microsoft.Data.OData.Query.SemanticAst.OrderByClause" />-Instanzen. </summary>
      <returns>Die Auflistung von neuen <see cref="T:System.Web.Http.OData.Query.OrderByPropertyNode" />-Instanzen.</returns>
      <param name="orderByClause">Der Kopfteil der verknüpften <see cref="T:Microsoft.Data.OData.Query.SemanticAst.OrderByClause" />-Liste.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.OrderByNode.Direction">
      <summary> Ruft das <see cref="T:Microsoft.Data.OData.Query.OrderByDirection" />-Objekt für den aktuellen Knoten ab. </summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.OrderByPropertyNode">
      <summary>Stellt eine Sortierung nach <see cref="T:Microsoft.Data.Edm.IEdmProperty" />-Ausdruck dar.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByPropertyNode.#ctor(Microsoft.Data.Edm.IEdmProperty,Microsoft.Data.OData.Query.OrderByDirection)">
      <summary>Instanziiert eine neue Instanz der <see cref="T:System.Web.Http.OData.Query.OrderByPropertyNode" />-Klasse.</summary>
      <param name="property">Das <see cref="T:Microsoft.Data.Edm.IEdmProperty" />-Objekt für diesen Knoten.</param>
      <param name="direction">Das <see cref="T:Microsoft.Data.OData.Query.OrderByDirection" />-Objekt für diesen Knoten.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.OrderByPropertyNode.Property">
      <summary>Ruft das <see cref="T:Microsoft.Data.Edm.IEdmProperty" />-Objekt für den aktuellen Knoten ab.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.OrderByQueryOption">
      <summary>Definiert eine $orderby-Abfrageoption von OData für die Abfrage.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByQueryOption.#ctor(System.String,System.Web.Http.OData.ODataQueryContext)">
      <summary>Initialisiert eine neue Instanz von <see cref="T:System.Web.Http.OData.Query.OrderByQueryOption" /> basierend auf dem $orderby-Rohwert und einem EdmModel aus <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</summary>
      <param name="rawValue">Der Rohwert für die $orderby-Abfrage. Darf null oder leer sein.</param>
      <param name="context">Der <see cref="T:System.Web.Http.OData.ODataQueryContext" />, der das <see cref="T:Microsoft.Data.Edm.IEdmModel" /> und einige Typinformationen enthält.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByQueryOption.ApplyTo(System.Linq.IQueryable)">
      <summary>Wendet die $orderby-Abfrage auf das angegebene IQueryable-Objekt an.</summary>
      <returns>Die Abfrage, auf die die orderby-Abfrage angewendet wurde.</returns>
      <param name="query">Das IQueryable-Objekt, für das die orderby-Abfrage angewendet wird.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByQueryOption.ApplyTo``1(System.Linq.IQueryable{``0})">
      <summary>  Wendet die $orderby-Abfrage auf das angegebene IQueryable-Objekt an.</summary>
      <returns>Die Abfrage, auf die die orderby-Abfrage angewendet wurde.</returns>
      <param name="query">Das IQueryable-Objekt, für das die orderby-Abfrage angewendet wird.</param>
      <typeparam name="T"></typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Query.OrderByQueryOption.Context">
      <summary>Ruft den angegebenen <see cref="T:System.Web.Http.OData.ODataQueryContext" /> ab.</summary>
      <returns>Gibt <see cref="T:System.Web.Http.OData.ODataQueryContext" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.OrderByQueryOption.OrderByNodes">
      <summary>Ruft die Auflistung von <see cref="T:System.Web.Http.OData.Query.OrderByPropertyNode" />-Instanzen für die aktuelle <see cref="T:System.Web.Http.OData.Query.OrderByQueryOption" /> ab.</summary>
      <returns>Gibt <see cref="T:System.Collections.Generic.ICollection`1" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.OrderByQueryOption.RawValue">
      <summary>Ruft den $orderby-Rohwert ab.</summary>
      <returns>Gibt <see cref="T:System.String" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByQueryOption.Validate(System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Überprüft die orderby-Abfrage basierend auf den angegebenen <paramref name="validationSettings" />. Bei einem Überprüfungsfehler wird ODataException ausgelöst.</summary>
      <param name="validationSettings">Die <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" />-Instanz, die alle Überprüfungseinstellungen enthält.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.OrderByQueryOption.Validator">
      <summary>Ruft den OrderBy-Abfragevalidator ab oder legt ihn fest.</summary>
      <returns>Gibt <see cref="T:System.Web.Http.OData.Query.Validators.OrderByQueryValidator" /> zurück.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Query.QueryFilterProvider">
      <summary>Eine Implementierung von <see cref="T:System.Web.Http.Filters.IFilterProvider" />, die einen Aktionsfilter auf eine beliebige Aktion mit einem <see cref="T:System.Linq.IQueryable" />- oder <see cref="T:System.Linq.IQueryable`1" />-Rückgabetyp anwendet, der keinen Parameter vom Typ <see cref="T:System.Web.Http.OData.Query.ODataQueryOptions" /> bindet.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.QueryFilterProvider.#ctor(System.Web.Http.Filters.IActionFilter)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.OData.Query.QueryFilterProvider" />-Klasse.</summary>
      <param name="queryFilter">Der Aktionsfilter, der die Abfrage ausführt.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.QueryFilterProvider.GetFilters(System.Web.Http.HttpConfiguration,System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Stellt Filter bereit, die auf die angegebene Aktion angewendet werden sollen.</summary>
      <returns>Die Filter, die auf die angegebene Aktion angewendet werden sollen.</returns>
      <param name="configuration">Die Serverkonfiguration.</param>
      <param name="actionDescriptor">Der Aktionsdeskriptor für die Aktion, für die Filter bereitgestellt werden sollen.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.QueryFilterProvider.QueryFilter">
      <summary>Ruft den Aktionsfilter ab, der die Abfrage ausführt.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.SkipQueryOption">
      <summary>Definiert eine $skip-Abfrageoption von OData für die Abfrage.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.SkipQueryOption.#ctor(System.String,System.Web.Http.OData.ODataQueryContext)">
      <summary>Initialisiert eine neue Instanz von <see cref="T:System.Web.Http.OData.Query.SkipQueryOption" /> basierend auf dem $skip-Rohwert und einem EdmModel aus <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</summary>
      <param name="rawValue">Der Rohwert für die $skip-Abfrage. Darf null oder leer sein.</param>
      <param name="context">Der <see cref="T:System.Web.Http.OData.ODataQueryContext" />, der das <see cref="T:Microsoft.Data.Edm.IEdmModel" /> und einige Typinformationen enthält.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.SkipQueryOption.ApplyTo(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQuerySettings)">
      <returns>Gibt <see cref="T:System.Linq.IQueryable" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Query.SkipQueryOption.ApplyTo``1(System.Linq.IQueryable{``0},System.Web.Http.OData.Query.ODataQuerySettings)">
      <returns>Gibt <see cref="T:System.Linq.IQueryable`1" /> zurück.</returns>
      <typeparam name="T"></typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Query.SkipQueryOption.Context">
      <summary>Ruft den angegebenen <see cref="T:System.Web.Http.OData.ODataQueryContext" /> ab.</summary>
      <returns>Gibt <see cref="T:System.Web.Http.OData.ODataQueryContext" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.SkipQueryOption.RawValue">
      <summary>Ruft den $skip-Rohwert ab.</summary>
      <returns>Gibt <see cref="T:System.String" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Query.SkipQueryOption.Validate(System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Überprüft die skip-Abfrage basierend auf den angegebenen <paramref name="validationSettings" />. Löst bei einem Überprüfungsfehler ODataException aus.</summary>
      <param name="validationSettings">Die <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" />-Instanz, die alle Überprüfungseinstellungen enthält.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.SkipQueryOption.Validator">
      <summary>  Ruft den Skip-Abfragevalidator ab oder legt ihn fest.</summary>
      <returns>Gibt <see cref="T:System.Web.Http.OData.Query.Validators.SkipQueryValidator" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.SkipQueryOption.Value">
      <summary>Ruft den Wert von $skip als analysierten Integerwert ab.</summary>
      <returns>Gibt <see cref="T:System.Int32" /> zurück.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Query.TopQueryOption">
      <summary>Definiert eine $top-Abfrageoption von OData für die Abfrage.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.TopQueryOption.#ctor(System.String,System.Web.Http.OData.ODataQueryContext)">
      <summary>Initialisiert eine neue Instanz von <see cref="T:System.Web.Http.OData.Query.TopQueryOption" /> basierend auf dem $top-Rohwert und einem EdmModel aus <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</summary>
      <param name="rawValue">Der Rohwert für die $top-Abfrage. Darf null oder leer sein.</param>
      <param name="context">Der <see cref="T:System.Web.Http.OData.ODataQueryContext" />, der das <see cref="T:Microsoft.Data.Edm.IEdmModel" /> und einige Typinformationen enthält.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.TopQueryOption.ApplyTo(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQuerySettings)">
      <returns>Gibt <see cref="T:System.Linq.IQueryable" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Query.TopQueryOption.ApplyTo``1(System.Linq.IQueryable{``0},System.Web.Http.OData.Query.ODataQuerySettings)">
      <returns>Gibt <see cref="T:System.Linq.IOrderedQueryable`1" /> zurück.</returns>
      <typeparam name="T"></typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Query.TopQueryOption.Context">
      <summary>Ruft den angegebenen <see cref="T:System.Web.Http.OData.ODataQueryContext" /> ab.</summary>
      <returns>Gibt <see cref="T:System.Web.Http.OData.ODataQueryContext" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.TopQueryOption.RawValue">
      <summary>Ruft den $top-Rohwert ab.</summary>
      <returns>Gibt <see cref="T:System.String" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Query.TopQueryOption.Validate(System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Überprüft die top-Abfrage basierend auf den angegebenen <paramref name="validationSettings" />. Bei einem Überprüfungsfehler wird ODataException ausgelöst.</summary>
      <param name="validationSettings">Die <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" />-Instanz, die alle Überprüfungseinstellungen enthält.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.TopQueryOption.Validator">
      <summary>Ruft den Top-Abfragevalidator ab oder legt ihn fest.</summary>
      <returns>Gibt <see cref="T:System.Web.Http.OData.Query.Validators.TopQueryValidator" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.TopQueryOption.Value">
      <summary>Ruft den Wert von $top als analysierten Integerwert ab.</summary>
      <returns>Gibt <see cref="T:System.Int32" /> zurück.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Query.Validators.FilterQueryValidator">
      <summary> Definiert eine Validatorklasse, die zum Überprüfen einer FilterQueryOption basierend auf den Einstellungen verwendet wird.  </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.OData.Query.Validators.FilterQueryValidator" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.Validate(System.Web.Http.OData.Query.FilterQueryOption,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Der Einstiegspunkt dieser Validatorklasse. Verwenden Sie diese Methode zum Überprüfen von FilterQueryOption. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateAllNode(Microsoft.Data.OData.Query.SemanticAst.AllNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Setzen Sie diese Methode außer Kraft, um die Abfrage all in der Filterabfrage einzuschränken.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateAnyNode(Microsoft.Data.OData.Query.SemanticAst.AnyNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Setzen Sie diese Methode außer Kraft, um die Abfrage any in der Filterabfrage einzuschränken.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateArithmeticOperator(Microsoft.Data.OData.Query.SemanticAst.BinaryOperatorNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Setzen Sie diese Methode für die arithmetischen Operatoren (einschließlich add, sub, mul, div, mod) außer Kraft. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateBinaryOperatorNode(Microsoft.Data.OData.Query.SemanticAst.BinaryOperatorNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Setzen Sie diese Methode außer Kraft, um binären Operatoren in der Filterabfrage einzuschränken. Dies schließt alle logischen Operatoren mit Ausnahme von not und allen mathematischen Operatoren ein. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateCollectionPropertyAccessNode(Microsoft.Data.OData.Query.SemanticAst.CollectionPropertyAccessNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Setzen Sie diese Methode außer Kraft, um den Accessor für die Auflistungseigenschaften zu überprüfen. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateConstantNode(Microsoft.Data.OData.Query.SemanticAst.ConstantNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Setzen Sie diese Methode außer Kraft, um constant in der Filterabfrage einzuschränken. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateConvertNode(Microsoft.Data.OData.Query.SemanticAst.ConvertNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Setzen Sie diese Methode außer Kraft, um cast in der Filterabfrage einzuschränken. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateEntityCollectionCastNode(Microsoft.Data.OData.Query.SemanticAst.EntityCollectionCastNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Setzen Sie diese Methode außer Kraft, wenn Sie Umwandlungen für Entitätsauflistungen überprüfen möchten. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateLogicalOperator(Microsoft.Data.OData.Query.SemanticAst.BinaryOperatorNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Setzen Sie diese Methode außer Kraft, um die logischen Operatoren (z. B. eq, ne, gt, ge, lt, le, and, or) zu überprüfen.  Beachten Sie, dass not hier nicht enthalten ist. Setzen Sie ValidateUnaryOperatorNode außer Kraft, um not anzupassen. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateNavigationPropertyNode(Microsoft.Data.OData.Query.SemanticAst.QueryNode,Microsoft.Data.Edm.IEdmNavigationProperty,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Setzen Sie diese Methode für den Navigationseigenschaftenknoten außer Kraft. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateQueryNode(Microsoft.Data.OData.Query.SemanticAst.QueryNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Setzen Sie diese Methode außer Kraft, wenn Sie jeden Abfrageknoten besuchen möchten.  </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateRangeVariable(Microsoft.Data.OData.Query.SemanticAst.RangeVariable,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Setzen Sie diese Methode außer Kraft, um den in der Filterabfrage verwendeten Parameter zu überprüfen. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateSingleEntityCastNode(Microsoft.Data.OData.Query.SemanticAst.SingleEntityCastNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Setzen Sie diese Methode außer Kraft, wenn Sie Umwandlungen für einzelne Entitäten überprüfen möchten. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateSingleValueFunctionCallNode(Microsoft.Data.OData.Query.SingleValueFunctionCallNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Setzen Sie diese Methode außer Kraft, um Funktionsaufrufe (z. B. length, years usw.) zu überprüfen. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateSingleValuePropertyAccessNode(Microsoft.Data.OData.Query.SemanticAst.SingleValuePropertyAccessNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Setzen Sie diese Methode außer Kraft, um den Eigenschaftenaccessor zu überprüfen. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateUnaryOperatorNode(Microsoft.Data.OData.Query.SemanticAst.UnaryOperatorNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Setzen Sie diese Methode außer Kraft, um den Operator Not zu überprüfen. </summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.Validators.ODataQueryValidator"></member>
    <member name="M:System.Web.Http.OData.Query.Validators.ODataQueryValidator.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.OData.Query.Validators.ODataQueryValidator" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.ODataQueryValidator.Validate(System.Web.Http.OData.Query.ODataQueryOptions,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Überprüft, ob die angegebene ODataQueryOption den Angaben in AllowedQueryOptions genügt. Standardmäßig sind vier Operatoren zulässig. </summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.Validators.OrderByQueryValidator"></member>
    <member name="M:System.Web.Http.OData.Query.Validators.OrderByQueryValidator.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.OData.Query.Validators.OrderByQueryValidator" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.OrderByQueryValidator.Validate(System.Web.Http.OData.Query.OrderByQueryOption,System.Web.Http.OData.Query.ODataValidationSettings)"></member>
    <member name="T:System.Web.Http.OData.Query.Validators.SkipQueryValidator"></member>
    <member name="M:System.Web.Http.OData.Query.Validators.SkipQueryValidator.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.OData.Query.Validators.SkipQueryValidator" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.SkipQueryValidator.Validate(System.Web.Http.OData.Query.SkipQueryOption,System.Web.Http.OData.Query.ODataValidationSettings)"></member>
    <member name="T:System.Web.Http.OData.Query.Validators.TopQueryValidator"></member>
    <member name="M:System.Web.Http.OData.Query.Validators.TopQueryValidator.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.OData.Query.Validators.TopQueryValidator" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.TopQueryValidator.Validate(System.Web.Http.OData.Query.TopQueryOption,System.Web.Http.OData.Query.ODataValidationSettings)"></member>
    <member name="T:System.Web.Http.OData.Routing.ActionPathSegment">
      <summary>Eine <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" />-Implementierung, die einen Aktionsaufruf darstellt.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ActionPathSegment.#ctor(Microsoft.Data.Edm.IEdmFunctionImport)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.OData.Routing.ActionPathSegment" />-Klasse.</summary>
      <param name="action">Die Aktion, die aufgerufen wird.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ActionPathSegment.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.OData.Routing.ActionPathSegment" />-Klasse.</summary>
      <param name="actionName">Der Name der Aktion.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ActionPathSegment.Action">
      <summary>Ruft die Aktion ab, die aufgerufen wird.</summary>
      <returns>Gibt <see cref="T:Microsoft.Data.Edm.IEdmFunctionImport" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ActionPathSegment.ActionName">
      <summary>Ruft den Namen der Aktion ab.</summary>
      <returns>Gibt <see cref="T:System.String" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ActionPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Ruft den EDM-Typ für dieses Segment ab.</summary>
      <returns>Der EDM-Typ für dieses Segment.</returns>
      <param name="previousEdmType">Der EDM-Typ des vorherigen Pfadsegments.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ActionPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Ruft die Entitätssammlung für dieses Segment ab.</summary>
      <returns>Die Entitätssammlung für dieses Segment.</returns>
      <param name="previousEntitySet">Die Entitätssammlung des vorherigen Pfadsegments.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ActionPathSegment.SegmentKind">
      <summary>Ruft den Segmenttyp für das aktuelle Segment ab.</summary>
      <returns>Gibt <see cref="T:System.String" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ActionPathSegment.ToString">
      <summary>Gibt eine <see cref="T:System.String" /> zurück, die diese Instanz darstellt.</summary>
      <returns>Eine <see cref="T:System.String" />, die diese Instanz darstellt.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.BatchPathSegment">
      <summary>Eine <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" />-Implementierung, die ein $batch-Segment darstellt.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.BatchPathSegment.#ctor"></member>
    <member name="M:System.Web.Http.OData.Routing.BatchPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>   Ruft den EDM-Typ für dieses Segment ab.</summary>
      <returns>Der EDM-Typ für dieses Segment.</returns>
      <param name="previousEdmType">Der EDM-Typ des vorherigen Pfadsegments.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.BatchPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Ruft die Entitätssammlung für dieses Segment ab.</summary>
      <returns>Die Entitätssammlung für dieses Segment.</returns>
      <param name="previousEntitySet">Die Entitätssammlung des vorherigen Pfadsegments.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.BatchPathSegment.SegmentKind">
      <summary>Ruft den Segmenttyp für das aktuelle Segment ab.</summary>
      <returns>Gibt <see cref="T:System.String" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.BatchPathSegment.ToString">
      <summary>Gibt eine <see cref="T:System.String" /> zurück, die diese Instanz darstellt.</summary>
      <returns>Eine <see cref="T:System.String" />, die diese Instanz darstellt.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.CastPathSegment">
      <summary>Eine <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" />-Implementierung, die eine Umwandlung darstellt.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.CastPathSegment.#ctor(Microsoft.Data.Edm.IEdmEntityType)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.OData.Routing.CastPathSegment" />-Klasse.</summary>
      <param name="castType">Der Typ der Umwandlung.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.CastPathSegment.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.OData.Routing.CastPathSegment" />-Klasse.</summary>
      <param name="castTypeName">Der Name des Umwandlungstyps.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.CastPathSegment.CastType">
      <summary>Ruft den Typ der Umwandlung ab.</summary>
      <returns>Gibt <see cref="T:Microsoft.Data.Edm.IEdmEntityType" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.CastPathSegment.CastTypeName">
      <summary>  Ruft den Namen des Umwandlungstyps ab.</summary>
      <returns>Gibt <see cref="T:System.String" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.CastPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Ruft den EDM-Typ für dieses Segment ab.</summary>
      <returns>  Der EDM-Typ für dieses Segment.</returns>
      <param name="previousEdmType">Der EDM-Typ des vorherigen Pfadsegments.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.CastPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Ruft die Entitätssammlung für dieses Segment ab.</summary>
      <returns>Die Entitätssammlung für dieses Segment.</returns>
      <param name="previousEntitySet">Die Entitätssammlung des vorherigen Pfadsegments.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.CastPathSegment.SegmentKind">
      <summary>Ruft den Segmenttyp für das aktuelle Segment ab.</summary>
      <returns>Gibt <see cref="T:System.String" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.CastPathSegment.ToString">
      <summary>Gibt eine <see cref="T:System.String" /> zurück, die diese Instanz darstellt.</summary>
      <returns>Eine <see cref="T:System.String" />, die diese Instanz darstellt.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.DefaultODataPathHandler">
      <summary> Analysiert einen OData-Pfad als einen <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> und konvertiert einen <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> in einen OData-Link. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.OData.Routing.DefaultODataPathHandler" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.Link(System.Web.Http.OData.Routing.ODataPath)">
      <summary> Konvertiert eine Instanz von <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> in einen OData-Link. </summary>
      <returns> Der generierte OData-Link. </returns>
      <param name="path">Der OData-Pfad, der in einen Link konvertiert werden soll.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.Parse(Microsoft.Data.Edm.IEdmModel,System.String)">
      <summary> Analysiert den angegebenen OData-Pfad als einen <see cref="T:System.Web.Http.OData.Routing.ODataPath" />, der zusätzliche Informationen zum EDM-Typ und zur Entitätssammlung für den Pfad enthält. </summary>
      <returns>Eine analysierte Darstellung des Pfads oder null, wenn der Pfad nicht mit dem Modell übereinstimmt.</returns>
      <param name="model">Das Modell, das für die Pfadanalyse verwendet werden soll.</param>
      <param name="odataPath">Der zu analysierende OData-Pfad.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseAtCollection(Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.ODataPathSegment,Microsoft.Data.Edm.IEdmType,System.String)">
      <summary> Analysiert das nächste OData-Pfadsegment, das auf eine Auflistung folgt. </summary>
      <returns>Eine analysierte Darstellung des Segments.</returns>
      <param name="model">Das Modell, das für die Pfadanalyse verwendet werden soll.</param>
      <param name="previous">Das vorherige OData-Pfadsegment.</param>
      <param name="previousEdmType">Der EDM-Typ des OData-Pfads bis zum vorherigen Segment.</param>
      <param name="segment">Der Wert des zu analysierenden Segments.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseAtComplex(Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.ODataPathSegment,Microsoft.Data.Edm.IEdmType,System.String)">
      <summary> Analysiert das nächste OData-Pfadsegment, das auf ein Segment mit einem komplexen Typ folgt. </summary>
      <returns>Eine analysierte Darstellung des Segments.</returns>
      <param name="model">Das Modell, das für die Pfadanalyse verwendet werden soll.</param>
      <param name="previous">Das vorherige OData-Pfadsegment.</param>
      <param name="previousEdmType">Der EDM-Typ des OData-Pfads bis zum vorherigen Segment.</param>
      <param name="segment">Der Wert des zu analysierenden Segments.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseAtEntity(Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.ODataPathSegment,Microsoft.Data.Edm.IEdmType,System.String)">
      <summary> Analysiert das nächste OData-Pfadsegment, das auf eine Entität folgt. </summary>
      <returns>Eine analysierte Darstellung des Segments.</returns>
      <param name="model">Das Modell, das für die Pfadanalyse verwendet werden soll.</param>
      <param name="previous">Das vorherige OData-Pfadsegment.</param>
      <param name="previousEdmType">Der EDM-Typ des OData-Pfads bis zum vorherigen Segment.</param>
      <param name="segment">Der Wert des zu analysierenden Segments.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseAtEntityCollection(Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.ODataPathSegment,Microsoft.Data.Edm.IEdmType,System.String)">
      <summary> Analysiert das nächste OData-Pfadsegment, das auf eine Entitätsauflistung folgt. </summary>
      <returns>Eine analysierte Darstellung des Segments.</returns>
      <param name="model">Das Modell, das für die Pfadanalyse verwendet werden soll.</param>
      <param name="previous">Das vorherige OData-Pfadsegment.</param>
      <param name="previousEdmType">Der EDM-Typ des OData-Pfads bis zum vorherigen Segment.</param>
      <param name="segment">Der Wert des zu analysierenden Segments.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseAtPrimitiveProperty(Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.ODataPathSegment,Microsoft.Data.Edm.IEdmType,System.String)">
      <summary> Analysiert das nächste OData-Pfadsegment, das auf eine primitive Eigenschaft folgt. </summary>
      <returns>Eine analysierte Darstellung des Segments.</returns>
      <param name="model">Das Modell, das für die Pfadanalyse verwendet werden soll.</param>
      <param name="previous">Das vorherige OData-Pfadsegment.</param>
      <param name="previousEdmType">Der EDM-Typ des OData-Pfads bis zum vorherigen Segment.</param>
      <param name="segment">Der Wert des zu analysierenden Segments.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseEntrySegment(Microsoft.Data.Edm.IEdmModel,System.String)">
      <summary> Analysiert das erste OData-Segment, das auf den Basis-URI des Diensts folgt. </summary>
      <returns>Eine analysierte Darstellung des Segments.</returns>
      <param name="model">Das Modell, das für die Pfadanalyse verwendet werden soll.</param>
      <param name="segment">Der Wert des zu analysierenden Segments.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseNextSegment(Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.ODataPathSegment,Microsoft.Data.Edm.IEdmType,System.String)">
      <summary> Analysiert das nächste OData-Pfadsegment. </summary>
      <returns>Eine analysierte Darstellung des Segments.</returns>
      <param name="model">Das Modell, das für die Pfadanalyse verwendet werden soll.</param>
      <param name="previous">Das vorherige OData-Pfadsegment.</param>
      <param name="previousEdmType">Der EDM-Typ des OData-Pfads bis zum vorherigen Segment.</param>
      <param name="segment">Der Wert des zu analysierenden Segments.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseSegments(System.String)">
      <summary> Analysiert den OData-Pfad in Segmente. </summary>
      <returns>Die Segmente des OData-Pfads.</returns>
      <param name="odataPath">Der OData-Pfad.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.EntitySetPathSegment">
      <summary>Eine <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" />-Implementierung, die eine Entitätssammlung darstellt.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.EntitySetPathSegment.#ctor(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.OData.Routing.EntitySetPathSegment" />-Klasse.</summary>
      <param name="entitySet">Die Entitätssammlung, auf die zugegriffen wird.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.EntitySetPathSegment.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.OData.Routing.EntitySetPathSegment" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Routing.EntitySetPathSegment.EntitySet">
      <returns>Gibt <see cref="T:Microsoft.Data.Edm.IEdmEntitySet" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.EntitySetPathSegment.EntitySetName">
      <summary>Ruft den Namen der Entitätssammlung ab.</summary>
      <returns>Gibt <see cref="T:System.String" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.EntitySetPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>   Ruft den EDM-Typ für dieses Segment ab.</summary>
      <returns>Der EDM-Typ für dieses Segment.</returns>
      <param name="previousEdmType">Der EDM-Typ des vorherigen Pfadsegments.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.EntitySetPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>   Ruft die Entitätssammlung für dieses Segment ab.</summary>
      <returns>Die Entitätssammlung für dieses Segment.</returns>
      <param name="previousEntitySet">Die Entitätssammlung des vorherigen Pfadsegments.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.EntitySetPathSegment.SegmentKind">
      <summary>Ruft den Segmenttyp für das aktuelle Segment ab.</summary>
      <returns>Gibt <see cref="T:System.String" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.EntitySetPathSegment.ToString">
      <summary>Gibt eine <see cref="T:System.String" /> zurück, die diese Instanz darstellt.</summary>
      <returns>Eine <see cref="T:System.String" />, die diese Instanz darstellt.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.IODataPathHandler">
      <summary> Stellt die Funktion zum Analysieren eines OData-Pfads als <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> und zum Konvertieren eines <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> in einen OData-Link zur Verfügung. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.IODataPathHandler.Link(System.Web.Http.OData.Routing.ODataPath)">
      <summary> Konvertiert eine Instanz von <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> in einen OData-Link. </summary>
      <returns>Der generierte OData-Link.</returns>
      <param name="path">Der OData-Pfad, der in einen Link konvertiert werden soll.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.IODataPathHandler.Parse(Microsoft.Data.Edm.IEdmModel,System.String)">
      <summary> Analysiert den angegebenen OData-Pfad als einen <see cref="T:System.Web.Http.OData.Routing.ODataPath" />, der zusätzliche Informationen zum EDM-Typ und zur Entitätssammlung für den Pfad enthält. </summary>
      <returns>Eine analysierte Darstellung des URIs oder null, wenn der URI nicht mit dem Modell übereinstimmt.</returns>
      <param name="model">Das Modell, das für die Pfadanalyse verwendet werden soll.</param>
      <param name="odataPath">Der zu analysierende OData-Pfad.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.KeyValuePathSegment">
      <summary>Eine <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" />-Implementierung, die eine Indizierung in einer Entitätssammlung nach Schlüssel darstellt.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.KeyValuePathSegment.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.OData.Routing.KeyValuePathSegment" />-Klasse.</summary>
      <param name="value">Der Schlüsselwert, der für die Indizierung der Auflistung verwendet werden soll.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.KeyValuePathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Ruft den EDM-Typ für dieses Segment ab.</summary>
      <returns>Der EDM-Typ für dieses Segment.</returns>
      <param name="previousEdmType">Der EDM-Typ des vorherigen Pfadsegments.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.KeyValuePathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Ruft die Entitätssammlung für dieses Segment ab.</summary>
      <returns>Die Entitätssammlung für dieses Segment.</returns>
      <param name="previousEntitySet">Die Entitätssammlung des vorherigen Pfadsegments.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.KeyValuePathSegment.SegmentKind">
      <summary>Ruft den Segmenttyp für das aktuelle Segment ab.</summary>
      <returns>Gibt <see cref="T:System.String" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.KeyValuePathSegment.ToString">
      <summary>Gibt eine <see cref="T:System.String" /> zurück, die diese Instanz darstellt.</summary>
      <returns>Eine <see cref="T:System.String" />, die diese Instanz darstellt.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.KeyValuePathSegment.Value">
      <summary>Ruft den Schlüsselwert ab, der für die Indizierung der Auflistung verwendet werden soll.</summary>
      <returns>Gibt <see cref="T:System.String" /> zurück.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.LinksPathSegment">
      <summary>Eine <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" />-Implementierung, die ein $links-Segment darstellt.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.LinksPathSegment.#ctor"></member>
    <member name="M:System.Web.Http.OData.Routing.LinksPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>  Ruft den EDM-Typ für dieses Segment ab.</summary>
      <returns>Der EDM-Typ für dieses Segment.</returns>
      <param name="previousEdmType">Der EDM-Typ des vorherigen Pfadsegments.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.LinksPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Ruft die Entitätssammlung für dieses Segment ab.</summary>
      <returns>Die Entitätssammlung für dieses Segment.</returns>
      <param name="previousEntitySet">Die Entitätssammlung des vorherigen Pfadsegments.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.LinksPathSegment.SegmentKind">
      <summary>Ruft den Segmenttyp für das aktuelle Segment ab.</summary>
      <returns>Gibt <see cref="T:System.String" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.LinksPathSegment.ToString">
      <summary>Gibt eine <see cref="T:System.String" /> zurück, die diese Instanz darstellt.</summary>
      <returns>Eine <see cref="T:System.String" />, die diese Instanz darstellt.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.MetadataPathSegment">
      <summary>Eine <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" />-Implementierung, die ein $metadata-Segment darstellt.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.MetadataPathSegment.#ctor"></member>
    <member name="M:System.Web.Http.OData.Routing.MetadataPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>  Ruft den EDM-Typ für dieses Segment ab.</summary>
      <returns>Der EDM-Typ für dieses Segment.</returns>
      <param name="previousEdmType">Der EDM-Typ des vorherigen Pfadsegments.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.MetadataPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>  Ruft die Entitätssammlung für dieses Segment ab.</summary>
      <returns>Die Entitätssammlung für dieses Segment.</returns>
      <param name="previousEntitySet">Die Entitätssammlung des vorherigen Pfadsegments.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.MetadataPathSegment.SegmentKind">
      <summary>Ruft den Segmenttyp für das aktuelle Segment ab.</summary>
      <returns>Gibt <see cref="T:System.String" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.MetadataPathSegment.ToString">
      <summary>Gibt eine <see cref="T:System.String" /> zurück, die diese Instanz darstellt.</summary>
      <returns>Eine <see cref="T:System.String" />, die diese Instanz darstellt.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.NavigationPathSegment">
      <summary>Eine <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" />-Implementierung, die eine Navigation darstellt.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.NavigationPathSegment.#ctor(Microsoft.Data.Edm.IEdmNavigationProperty)">
      <summary>  Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.OData.Routing.NavigationPathSegment" />-Klasse.</summary>
      <param name="navigationProperty">Ruft die Navigationseigenschaft ab, auf die durch dieses Segment zugegriffen wird.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.NavigationPathSegment.#ctor(System.String)">
      <summary>  Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.OData.Routing.NavigationPathSegment" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.NavigationPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Ruft den EDM-Typ für dieses Segment ab.</summary>
      <returns>Der EDM-Typ für dieses Segment.</returns>
      <param name="previousEdmType">Der EDM-Typ des vorherigen Pfadsegments.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.NavigationPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Ruft die Entitätssammlung für dieses Segment ab.</summary>
      <returns>Die Entitätssammlung für dieses Segment.</returns>
      <param name="previousEntitySet">Die Entitätssammlung des vorherigen Pfadsegments.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.NavigationPathSegment.NavigationProperty">
      <summary>Ruft die Navigationseigenschaft ab, auf die durch dieses Segment zugegriffen wird.</summary>
      <returns>Gibt <see cref="T:Microsoft.Data.Edm.IEdmNavigationProperty" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.NavigationPathSegment.NavigationPropertyName">
      <summary>Ruft den Namen der Navigationseigenschaft ab.</summary>
      <returns>Gibt <see cref="T:System.String" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.NavigationPathSegment.SegmentKind">
      <summary>Ruft den Segmenttyp für das aktuelle Segment ab.</summary>
      <returns>Gibt <see cref="T:System.String" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.NavigationPathSegment.ToString">
      <summary>Gibt eine <see cref="T:System.String" /> zurück, die diese Instanz darstellt.</summary>
      <returns>Eine <see cref="T:System.String" />, die diese Instanz darstellt.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ODataActionSelector">
      <summary> Eine Implementierung von <see cref="T:System.Web.Http.Controllers.IHttpActionSelector" />, die die OData-Routingkonventionen des Servers zum Auswählen einer Aktion für OData-Anforderungen verwendet. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataActionSelector.#ctor(System.Web.Http.Controllers.IHttpActionSelector)">
      <summary> Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.OData.Routing.ODataActionSelector" />-Klasse. </summary>
      <param name="innerSelector">Die interne Controllerauswahl, die aufgerufen werden soll.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataActionSelector.GetActionMapping(System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary> Gibt, nach Aktionszeichenfolgen gegliedert, eine Zuordnung aller <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" /> zurück, die vom Selektor ausgewählt werden können.  Diese wird primär von <see cref="T:System.Web.Http.Description.IApiExplorer" /> aufgerufen, um alle möglichen Aktionen im Controller zu ermitteln. </summary>
      <returns> Eine Zuordnung von <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" />, die vom Selektor ausgewählt werden können, oder "null", wenn der Selektor keine wohldefinierte Zuordnung von <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" /> besitzt. </returns>
      <param name="controllerDescriptor">Der Controllerdeskriptor.</param>
      <exception cref="T:System.NotImplementedException"></exception>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataActionSelector.SelectAction(System.Web.Http.Controllers.HttpControllerContext)">
      <summary> Wählt eine Aktion für den <see cref="T:System.Web.Http.Controllers.ApiControllerActionSelector" /> aus. </summary>
      <returns> Die ausgewählte Aktion. </returns>
      <param name="controllerContext">Der Controllerkontext.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ODataPath">
      <summary>Stellt eine Objektdarstellung für einen OData-Pfad mit zusätzlichen Informationen zum EDM-Typ und zur Entitätssammlung für den Pfad zur Verfügung.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPath.#ctor(System.Collections.Generic.IList{System.Web.Http.OData.Routing.ODataPathSegment})">
      <summary>  Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.OData.Routing.ODataPath" />-Klasse.</summary>
      <param name="segments">Die Pfadsegmente für den Pfad.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPath.#ctor(System.Web.Http.OData.Routing.ODataPathSegment[])">
      <summary>  Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.OData.Routing.ODataPath" />-Klasse.</summary>
      <param name="segments">Die Pfadsegmente für den Pfad.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPath.EdmType">
      <summary>Ruft den EDM-Typ des Pfads ab oder legt ihn fest.</summary>
      <returns>Gibt <see cref="T:Microsoft.Data.Edm.IEdmType" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPath.EntitySet">
      <summary>Ruft die Entitätssammlung des Pfads ab oder legt sie fest.</summary>
      <returns>Gibt <see cref="T:Microsoft.Data.Edm.IEdmEntitySet" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPath.PathTemplate">
      <summary>Ruft die Pfadvorlage ab, die die Segmenttypen im Pfad beschreibt.</summary>
      <returns>Gibt <see cref="T:System.String" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPath.Segments">
      <summary>Ruft die Pfadsegmente für den OData-Pfad ab.</summary>
      <returns>Gibt <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPath.ToString">
      <returns>Gibt <see cref="T:System.String" /> zurück.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ODataPathParameterBindingAttribute">
      <summary> Eine Implementierung von <see cref="T:System.Web.Http.ParameterBindingAttribute" />, die zum Binden einer Instanz von <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> als Aktionsparameter verwendet wird. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathParameterBindingAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.OData.Routing.ODataPathParameterBindingAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathParameterBindingAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary> Ruft die Parameterbindung ab. </summary>
      <returns> Die Parameterbindung. </returns>
      <param name="parameter">Die Parameterbeschreibung.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ODataPathRouteConstraint">
      <summary> Eine Implementierung von <see cref="T:System.Web.Http.Routing.IHttpRouteConstraint" />, die nur mit OData-Pfaden übereinstimmt. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathRouteConstraint.#ctor(System.Web.Http.OData.Routing.IODataPathHandler,Microsoft.Data.Edm.IEdmModel,System.String,System.Collections.Generic.IEnumerable{System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention})">
      <summary> Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.OData.Routing.ODataPathRouteConstraint" />-Klasse. </summary>
      <param name="pathHandler">Der OData-Pfadhandler, der zum Analysieren verwendet werden soll.</param>
      <param name="model">Das EDM-Modell, das zum Analysieren des Pfads verwendet werden soll.</param>
      <param name="routeName">Der Name der Route, der diese Einschränkung zugeordnet ist.</param>
      <param name="routingConventions">Die OData-Routingkonventionen, die für die Auswahl des Controllernamens verwendet werden sollen.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPathRouteConstraint.EdmModel">
      <summary> Ruft das EDM-Modell ab, das zum Analysieren des Pfads verwendet werden soll. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary> Ermittelt, ob diese Instanz einer angegebenen Route entspricht. </summary>
      <returns>true, wenn diese Instanz mit einer angegebenen Route identisch ist, andernfalls false. </returns>
      <param name="request">Die Anforderung.</param>
      <param name="route">Die zu vergleichende Route.</param>
      <param name="parameterName">Der Name des Parameters.</param>
      <param name="values">Eine Liste der Parameterwerte.</param>
      <param name="routeDirection">Die Routenrichtung.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPathRouteConstraint.PathHandler">
      <summary> Ruft den OData-Pfadhandler ab, der zum Analysieren verwendet werden soll. </summary>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPathRouteConstraint.RouteName">
      <summary> Ruft den Namen der Route ab, der diese Einschränkung zugeordnet ist. </summary>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPathRouteConstraint.RoutingConventions">
      <summary> Ruft die OData-Routingkonventionen ab, die für die Auswahl des Controllernamens verwendet werden sollen. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathRouteConstraint.SelectControllerName(System.Web.Http.OData.Routing.ODataPath,System.Net.Http.HttpRequestMessage)">
      <summary> Wählt den Namen des Controllers aus, an den die Anforderung verteilt werden soll. </summary>
      <returns>Der Name des Controllers, an den die Verteilung erfolgen soll, oder null, wenn der Name nicht aufgelöst werden kann.</returns>
      <param name="path">Der OData-Pfad der Anforderung.</param>
      <param name="request">Die Anforderung.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ODataPathSegment">
      <summary>Stellt eine Objektdarstellung für ein OData-Pfadsegment mit zusätzlichen Informationen zum EDM-Typ und zur Entitätssammlung für den Pfad zur Verfügung.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathSegment.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Ruft den EDM-Typ für dieses Segment ab.</summary>
      <returns>Der EDM-Typ für dieses Segment.</returns>
      <param name="previousEdmType">Der EDM-Typ des vorherigen Pfadsegments.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>  Ruft die Entitätssammlung für dieses Segment ab.</summary>
      <returns>Die Entitätssammlung für dieses Segment.</returns>
      <param name="previousEntitySet">Die Entitätssammlung des vorherigen Pfadsegments.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPathSegment.SegmentKind">
      <summary>Ruft den Segmenttyp für das aktuelle Segment ab.</summary>
      <returns>Gibt <see cref="T:System.String" /> zurück.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ODataRouteConstants"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.Action"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.ConstraintName"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.Controller"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.Key"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.NavigationProperty"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.ODataPath"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.ODataPathTemplate"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.RelatedKey"></member>
    <member name="T:System.Web.Http.OData.Routing.ODataSegmentKinds">
      <summary>Stellt die Werte von Segmenttypen für Implementierungen von <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" /> zur Verfügung.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Action"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Batch"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Cast"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.EntitySet"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Key"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Links"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Metadata"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Navigation"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Property"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.ServiceBase"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Unresolved"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Value"></member>
    <member name="T:System.Web.Http.OData.Routing.PropertyAccessPathSegment">
      <summary>Eine <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" />-Implementierung, die einen Eigenschaftenzugriff darstellt.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.PropertyAccessPathSegment.#ctor(Microsoft.Data.Edm.IEdmProperty)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.OData.Routing.PropertyAccessPathSegment" />-Klasse.</summary>
      <param name="property">Ruft die Eigenschaft ab, auf die durch dieses Segment zugegriffen wird.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.PropertyAccessPathSegment.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.OData.Routing.PropertyAccessPathSegment" />-Klasse.</summary>
      <param name="propertyName">Der Name der Eigenschaft.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.PropertyAccessPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Ruft den EDM-Typ für dieses Segment ab.</summary>
      <returns>Der EDM-Typ für dieses Segment.</returns>
      <param name="previousEdmType">Der EDM-Typ des vorherigen Pfadsegments.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.PropertyAccessPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>  Ruft die Entitätssammlung für dieses Segment ab.</summary>
      <returns>Die Entitätssammlung für dieses Segment.</returns>
      <param name="previousEntitySet">Die Entitätssammlung des vorherigen Pfadsegments.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.PropertyAccessPathSegment.Property">
      <summary>Ruft die Eigenschaft ab, auf die durch dieses Segment zugegriffen wird.</summary>
      <returns>Gibt <see cref="T:Microsoft.Data.Edm.IEdmProperty" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.PropertyAccessPathSegment.PropertyName">
      <summary>Ruft den Namen der Eigenschaft ab.</summary>
      <returns>Gibt <see cref="T:System.String" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.PropertyAccessPathSegment.SegmentKind">
      <summary>Ruft den Segmenttyp für das aktuelle Segment ab.</summary>
      <returns>Gibt <see cref="T:System.String" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.PropertyAccessPathSegment.ToString">
      <summary>Gibt eine <see cref="T:System.String" /> zurück, die diese Instanz darstellt.</summary>
      <returns>Eine <see cref="T:System.String" />, die diese Instanz darstellt.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.UnresolvedPathSegment">
      <summary>Eine <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" />-Implementierung, die ein Segment darstellt, das nicht aufgelöst werden konnte.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.UnresolvedPathSegment.#ctor(System.String)">
      <summary>  Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.OData.Routing.UnresolvedPathSegment" />-Klasse.</summary>
      <param name="segmentValue">Der Wert des nicht aufgelösten Segments.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.UnresolvedPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <returns>Der EDM-Typ des vorherigen Pfadsegments.</returns>
      <param name="previousEdmType">Ruft den EDM-Typ für dieses Segment ab.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.UnresolvedPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Ruft die Entitätssammlung für dieses Segment ab.</summary>
      <returns>Die Entitätssammlung für dieses Segment.</returns>
      <param name="previousEntitySet">Die Entitätssammlung des vorherigen Pfadsegments.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.UnresolvedPathSegment.SegmentKind">
      <summary>Ruft den Segmenttyp für das aktuelle Segment ab.</summary>
      <returns>Gibt <see cref="T:System.String" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.UnresolvedPathSegment.SegmentValue">
      <summary>Ruft den Wert des nicht aufgelösten Segments ab.</summary>
      <returns>Gibt <see cref="T:System.String" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.UnresolvedPathSegment.ToString">
      <summary>Gibt eine <see cref="T:System.String" /> zurück, die diese Instanz darstellt.</summary>
      <returns>Eine <see cref="T:System.String" />, die diese Instanz darstellt.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ValuePathSegment">
      <summary>Eine <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" />-Implementierung, die ein $value-Segment darstellt.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ValuePathSegment.#ctor"></member>
    <member name="M:System.Web.Http.OData.Routing.ValuePathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Ruft den EDM-Typ für dieses Segment ab.</summary>
      <returns>Der EDM-Typ für dieses Segment.</returns>
      <param name="previousEdmType">Der EDM-Typ des vorherigen Pfadsegments.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ValuePathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Ruft die Entitätssammlung für dieses Segment ab.</summary>
      <returns>Die Entitätssammlung für dieses Segment.</returns>
      <param name="previousEntitySet">Die Entitätssammlung des vorherigen Pfadsegments.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ValuePathSegment.SegmentKind">
      <summary>Ruft den Segmenttyp für das aktuelle Segment ab.</summary>
      <returns>Gibt <see cref="T:System.String" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ValuePathSegment.ToString">
      <summary>Gibt eine <see cref="T:System.String" /> zurück, die diese Instanz darstellt.</summary>
      <returns>Eine <see cref="T:System.String" />, die diese Instanz darstellt.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.ActionRoutingConvention">
      <summary> Eine <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" />-Implementierung, die Aktionsaufrufe verarbeitet. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.ActionRoutingConvention.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.OData.Routing.Conventions.ActionRoutingConvention" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.ActionRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary> Wählt die Aktion für OData-Anforderungen aus. </summary>
      <returns>null, wenn die Anforderung nicht von dieser Konvention verarbeitet wird, andernfalls der Name der ausgewählten Aktion. </returns>
      <param name="odataPath">Der OData-Pfad.</param>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="actionMap">Die Aktionszuordnung.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.EntityRoutingConvention">
      <summary> Eine Implementierung von <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" />, die die Verarbeitung von Entitäten nach Schlüssel übernimmt. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.EntityRoutingConvention.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.OData.Routing.Conventions.EntityRoutingConvention" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.EntityRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary> Wählt die Aktion für OData-Anforderungen aus. </summary>
      <returns>null, wenn die Anforderung nicht von dieser Konvention verarbeitet wird, andernfalls der Name der ausgewählten Aktion. </returns>
      <param name="odataPath">Der OData-Pfad.</param>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="actionMap">Die Aktionszuordnung.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.EntitySetRoutingConvention">
      <summary> Eine Implementierung von <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" />, die Entitätssammlungen verarbeitet. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.EntitySetRoutingConvention.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.OData.Routing.Conventions.EntitySetRoutingConvention" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.EntitySetRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary> Wählt die Aktion für OData-Anforderungen aus. </summary>
      <returns>null, wenn die Anforderung nicht von dieser Konvention verarbeitet wird, andernfalls der Name der ausgewählten Aktion. </returns>
      <param name="odataPath">Der OData-Pfad.</param>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="actionMap">Die Aktionszuordnung.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.EntitySetRoutingConvention.SelectController(System.Web.Http.OData.Routing.ODataPath,System.Net.Http.HttpRequestMessage)">
      <summary> Wählt den Controller für OData-Anforderungen aus. </summary>
      <returns>null, wenn die Anforderung nicht von dieser Konvention verarbeitet wird, andernfalls der Name des ausgewählten Controllers. </returns>
      <param name="odataPath">Der OData-Pfad.</param>
      <param name="request">Die Anforderung.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention">
      <summary> Stellt eine Abstraktion zum Auswählen eines Controllers und einer Aktion für OData-Anforderungen zur Verfügung. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary> Wählt die Aktion für OData-Anforderungen aus. </summary>
      <returns>null, wenn die Anforderung nicht von dieser Konvention verarbeitet wird, andernfalls der Name der ausgewählten Aktion.</returns>
      <param name="odataPath">Der OData-Pfad.</param>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="actionMap">Die Aktionszuordnung.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention.SelectController(System.Web.Http.OData.Routing.ODataPath,System.Net.Http.HttpRequestMessage)">
      <summary> Wählt den Controller für OData-Anforderungen aus. </summary>
      <returns>null, wenn die Anforderung nicht von dieser Konvention verarbeitet wird, andernfalls der Name des ausgewählten Controllers.</returns>
      <param name="odataPath">Der OData-Pfad.</param>
      <param name="request">Die Anforderung.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.LinksRoutingConvention">
      <summary> Eine Implementierung von <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" />, die Linkbearbeitungen verarbeitet. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.LinksRoutingConvention.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.OData.Routing.Conventions.LinksRoutingConvention" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.LinksRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary> Wählt die Aktion aus. </summary>
      <param name="odataPath">Der OData-Pfad.</param>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="actionMap">Die Aktionszuordnung.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.MetadataRoutingConvention">
      <summary> Eine Implementierung von <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" />, die OData-Metadatenanforderungen verarbeitet. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.MetadataRoutingConvention.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.OData.Routing.Conventions.MetadataRoutingConvention" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.MetadataRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary> Wählt die Aktion für OData-Anforderungen aus. </summary>
      <returns>null, wenn die Anforderung nicht von dieser Konvention verarbeitet wird, andernfalls der Name der ausgewählten Aktion. </returns>
      <param name="odataPath">Der OData-Pfad.</param>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="actionMap">Die Aktionszuordnung.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.MetadataRoutingConvention.SelectController(System.Web.Http.OData.Routing.ODataPath,System.Net.Http.HttpRequestMessage)">
      <summary> Wählt den Controller für OData-Anforderungen aus. </summary>
      <returns>null, wenn die Anforderung nicht von dieser Konvention verarbeitet wird, andernfalls der Name des ausgewählten Controllers. </returns>
      <param name="odataPath">Der OData-Pfad.</param>
      <param name="request">Die Anforderung.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.NavigationRoutingConvention">
      <summary> Eine Implementierung von <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" />, die Navigationseigenschaften verarbeitet. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.NavigationRoutingConvention.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.OData.Routing.Conventions.NavigationRoutingConvention" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.NavigationRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary> Wählt die Aktion aus. </summary>
      <param name="odataPath">Der OData-Pfad.</param>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="actionMap">Die Aktionszuordnung.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.ODataRoutingConventions">
      <summary> Stellt Hilfsmethoden zum Erstellen von Routingkonventionen bereit. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.ODataRoutingConventions.CreateDefault">
      <summary> Erstellt eine änderbare Auflistung der OData-Standardroutingkonventionen. </summary>
      <returns>Eine änderbare Auflistung der OData-Standardroutingkonventionen.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.UnmappedRequestRoutingConvention">
      <summary> Eine Implementierung von <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" />, die immer die Aktion namens HandleUnmappedRequest auswählt, wenn diese Aktion vorhanden ist. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.UnmappedRequestRoutingConvention.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.OData.Routing.Conventions.UnmappedRequestRoutingConvention" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.UnmappedRequestRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary> Wählt die Aktion aus. </summary>
      <param name="odataPath">Der OData-Pfad.</param>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="actionMap">Die Aktionszuordnung.</param>
    </member>
  </members>
</doc>